{"version":3,"sources":["styled-components/styled.js","styled-components/globalStyled.js","components/form/algorithms/FormAlgorithm.js","components/form/formValidation/FormCaptcha.js","components/form/FormLogic.js","components/map/GoogleMapContainer.js","components/form/data/countries.js","components/form/data/states.js","components/form/data/selects.js","components/form/FormPreview.js","components/form/formValidation/FormValidation.js","redux/actions/formActions.js","pages/form/FormData.js","pages/form/FormResult.js","utility/Footer/Footer.js","utility/Banner.js","pages/HeroSection.js","pages/Home.js","App.js","redux/reducers/formReducer.js","redux/reducers/rootReducer.js","index.js"],"names":["size","mobileS","mobileM","mobileL","tablet","laptop","laptopL","desktop","MediaQueries","key","style","Hero","styled","div","HeroLogo","h1","props","theme","fontSizeMD","HeroCard","FormGroup","form","FormLabel","label","color","fontSizeSM","marginLeft","marginTop","errorLabelWidth","labelTop","FormInput","input","maxWidth","formItemHeight","marginTopInput","FormSelect","select","SelectOptions","option","FormButton","button","FormSubmission","PreviewForm","StyledModal","Modal","opacity","StyledCloseModal","span","FadingBackground","BaseModalBackground","ResultVerification","FooterContainer","footer","BannerContainer","GlobalStyles","createGlobalStyle","justifyContentCenter","justifyContentEvenly","alignItems","flexDirection","fontSizeLG","height","grayColor","fontWeight","alignCenter","alignStart","top","left","h1Top","gridPadding","gridGap","hrWidth","lineHeight","Main","main","Container","DisplayFlexMiddle","evenly","H1","center","h1top","H2","h2","Pragraph","p","Header","header","Span","SpanColor","AsteriskSpan","PrimarySpan","Card","SmallCard","ResultCard","CardSpacer","GridTwo","HRLine","hr","Navigate","a","formInputCheck","data","x","FormCaptcha","setVerified","useState","load","setLoading","reCaptchaRef","createRef","useEffect","setTimeout","ref","onChange","sitekey","FormLogic","number","setNumber","numberError","lastName","setLastName","firstName","setFirstName","email","setEmail","titleOptions","handleFormSubmit","title","setTitle","openModal","afterOpen","beforeClose","FormPreview","modalOpen","dataArray","firstNameError","lastNameError","emailError","termsError","setTerms","terms","countries","country","setCountry","stateArray","state","setState","address","setAddress","addressError","city","setCity","cityError","zipCode","setZipCode","zipCodeError","feetError","inchesError","setFeet","setInches","feet","inches","servicesOptions","budgetsOptions","service","setService","budget","setBudget","firstRender","useRef","verified","formatPhoneRef","current","onSubmit","htmlForm","type","id","name","placeholder","maxLength","value","e","target","required","map","options","index","numbers","replace","char","i","length","formatPhoneNumber","onClick","isOpen","onBackgroundClick","backgroundProps","last","first","zipcode","htmlFor","to","disabled","dotenv","config","path","mapStyles","width","position","border","borderRadius","GoogleApiWrapper","apiKey","process","REACT_APP_GOOGLE_MAP_API_KEY","showInfoWindow","setShowInfoWindow","activeMarker","setActiveMarker","selectedPlace","setSelectedPlace","lat","lng","latLon","setLatLon","getCoordinates","url","mapAddress","axios","get","then","response","console","log","results","geometry","location","catch","error","google","className","isActive","zoom","initialCenter","marker","visible","onClose","propsCheck","nameValidation","nameType","setError","match","addressValidations","heightValidation","setUserTitle","setUserCountry","setUserStates","states","setUserServices","services","setUserBudget","FormData","dispatch","useDispatch","setFirstNameError","setLastNameError","setEmailError","setTermsError","setAddressError","setCityError","setZipCodeError","setFeetError","setInchesError","setNumberError","isChecked","document","getElementById","checked","termsValidation","PhoneNumberValidation","setModalOpen","setOpacity","preventDefault","setUserFirstName","setUserLastName","setUserEmail","setUserCity","setUserAddress","setUserHeight","phoneNumber","Promise","resolve","FormResult","useSelector","selectorCheck","expenses","Footer","useHistory","href","icon","faGithub","faLinkedin","Banner","HeroSection","Home","library","add","App","backgroundComponent","basename","exact","component","INITIAL_STATE","formReducer","action","combineReducers","persistConfig","storage","stateReconciler","autoMergeLevel2","persistedReducer","persistReducer","rootReducer","store","composeWithDevTools","applyMiddleware","thunk","createStore","persistor","persistStore","ReactDOM","render","loading"],"mappings":"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,GAAY,CACvB,cACA,UACA,UACA,UACA,SACA,WACA,wBACA,YACA,UACA,QACA,YACA,UACA,aACA,UACA,UACA,aACA,WACA,UACA,UACA,SACA,QACA,UACA,SACA,UACA,2BACA,WACA,SACA,yBACA,SACA,WACA,eACA,UACA,WACA,WACA,SACA,aACA,iBACA,OACA,QACA,QACA,WACA,QACA,eACA,aACA,gBACA,UACA,cACA,OACA,SACA,iBACA,UACA,WACA,WACA,qBACA,UACA,QACA,cACA,oBACA,UACA,WACA,mBACA,gBACA,OACA,UACA,SACA,mBACA,qBACA,QACA,SACA,UACA,UACA,QACA,YACA,SACA,YACA,UACA,OACA,YACA,WACA,SACA,gBACA,SACA,QACA,WACA,YACA,UACA,UACA,QACA,YACA,OACA,OACA,UACA,cACA,SACA,QACA,UACA,QACA,SACA,SACA,aACA,QACA,SACA,kBACA,OACA,SACA,UACA,UACA,UACA,QACA,gBACA,YACA,aACA,QACA,YACA,aACA,SACA,WACA,WACA,OACA,QACA,aACA,YACA,SACA,UACA,SACA,WACA,aACA,aACA,UACA,aACA,UACA,QACA,cACA,uBACA,gBACA,cACA,YACA,QACA,UACA,SACA,OACA,WACA,YACA,SACA,mBACA,WACA,OACA,cACA,SACA,WACA,cACA,QACA,UACA,UACA,SACA,SACA,8BACA,QACA,aACA,YACA,eACA,UACA,SACA,aACA,eACA,YACA,WACA,WACA,eACA,cACA,QACA,YACA,uBACA,WACA,aACA,YACA,QACA,WACA,YACA,SACA,cACA,QACA,SACA,aACA,WACA,WACA,eACA,OACA,QACA,wBACA,UACA,SACA,eACA,qBACA,SACA,UACA,uBACA,iBACA,gBACA,uCACA,UACA,aACA,YACA,UACA,sBACA,QACA,SACA,YChNWG,GAAa,CACxB,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KAC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","file":"static/js/main.c86eb195.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\nimport Modal, { BaseModalBackground } from \"styled-react-modal\";\r\n\r\n// media queries\r\n\r\nconst size = {\r\n  mobileS: \"320px\",\r\n  mobileM: \"375px\",\r\n  mobileL: \"425px\",\r\n  tablet: \"768px\",\r\n  laptop: \"1024px\",\r\n  laptopL: \"1440px\",\r\n  desktop: \"2560px\",\r\n};\r\n\r\nexport const MediaQueries = (key) => {\r\n  return (style) => `@media (max-width: ${size[key]}){${style}}`;\r\n};\r\n\r\n// Hero\r\nexport const Hero = styled.div`\r\n  //   background: var(--primary-color);\r\n`;\r\n\r\nexport const HeroLogo = styled.h1`\r\n  font-size: ${(props) => props.theme.fontSizeMD};\r\n  color: var(--primary-color);\r\n`;\r\n\r\nexport const HeroCard = styled.div`\r\n  position: relative;\r\n  margin-top: 80rem;\r\n  padding: 10px 0;\r\n  ${MediaQueries(\"tablet\")`\r\n  margin-top: 90rem;\r\n  `}\r\n`;\r\n// Form\r\nexport const FormGroup = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding-left: 15px;\r\n  margin-top: 10px;\r\n`;\r\n\r\nexport const FormLabel = styled.label`\r\n  position: relative;\r\n  color: ${(props) => props.theme.color};\r\n  font-size: ${(props) => props.theme.fontSizeSM};\r\n  margin-left: ${(props) => props.theme.marginLeft};\r\n  margin-top: ${(props) => props.theme.marginTop};\r\n  width: ${(props) => props.theme.errorLabelWidth};\r\n  top: ${(props) => props.theme.labelTop};\r\n`;\r\n\r\nexport const FormInput = styled.input`\r\n  width: ${(props) => props.theme.maxWidth};\r\n  border: 1px solid var(--primary-color);\r\n  border-radius: 4px;\r\n  height: ${(props) => props.theme.formItemHeight};\r\n  margin-top: ${(props) => props.theme.marginTopInput};\r\n  padding: 4px;\r\n  ::placeholder {\r\n    padding: 4px;\r\n  }\r\n  :focus {\r\n    outline: none;\r\n  }\r\n  // :invalid {\r\n  //   border: 2px solid red;\r\n  // }\r\n\r\n  // :valid {\r\n  //   border: 2px solid green;\r\n  // }\r\n`;\r\n\r\nexport const FormSelect = styled.select`\r\n  width: ${(props) => props.theme.maxWidth};\r\n  border: 1px solid var(--primary-color);\r\n  border-radius: 4px;\r\n  height: ${(props) => props.theme.formItemHeight};\r\n  margin-top: 2px;\r\n  background: #fff;\r\n  cursor: pointer;\r\n`;\r\n\r\nexport const SelectOptions = styled.option`\r\n  font-size: 16px;\r\n  color: var(--primary-color);\r\n  cursor: pointer;\r\n`;\r\n\r\nexport const FormButton = styled.button`\r\n  // center button\r\n  // display: block;\r\n  // margin-left: auto;\r\n  // margin-right: auto;\r\n  border: 1px solid var(--primary-color);\r\n  border-radius: 5px;\r\n  background: var(--primary-color);\r\n  width: ${(props) => props.theme.maxWidth};\r\n  height: ${(props) => props.theme.formItemHeight};\r\n  margin-top: 10px;\r\n  cursor: pointer;\r\n  box-shadow: 0 2px 5px 0 var(--content-overlay);\r\n  color: #fff;\r\n`;\r\n\r\nexport const FormSubmission = styled.div`\r\n  position: relative;\r\n  top: 40px;\r\n`;\r\n\r\nexport const PreviewForm = styled.div`\r\n  // position: absolute;\r\n  // left: -50px;\r\n  // top: 150px;\r\n`;\r\n\r\n// Modal\r\nexport const StyledModal = Modal.styled`\r\n  position:relative;\r\n  width: 43rem;\r\n  height: 25rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  background-color: white;\r\n  opacity: ${(props) => props.opacity};\r\n  transition : all 0.3s ease-in-out;\r\n  border-radius:5px; \r\n\r\n  ${MediaQueries(\"tablet\")`\r\n  width: 35rem;\r\n  `}\r\n  ${MediaQueries(\"mobileL\")`\r\n  width: 25rem;\r\n  `}\r\n`;\r\nexport const StyledCloseModal = styled.span`\r\n  position: absolute;\r\n  top: -12px;\r\n  right: 0;\r\n  font-size: 50px;\r\n  color: var(--light-gray-color);\r\n  cursor: pointer;\r\n  z-index: 100;\r\n`;\r\n\r\nexport const FadingBackground = styled(BaseModalBackground)`\r\n  opacity: ${(props) => props.opacity};\r\n  transition: all 0.3s ease-in-out;\r\n`;\r\n\r\n// Form Result\r\nexport const ResultVerification = styled.div`\r\n  background-color: #fff;\r\n  width: 100%;\r\n  height: 600px;\r\n  margin-top: 1250px;\r\n  position: relative;\r\n`;\r\n\r\n// Footer\r\n\r\nexport const FooterContainer = styled.footer`\r\n  background-color: var(--bg-color);\r\n  color: var(--primary-color);\r\n  width: 100%;\r\n  height: 150px;\r\n  margin-top: 290px;\r\n`;\r\n\r\n// banner\r\nexport const BannerContainer = styled.div`\r\n  background: var(--primary-color);\r\n  height: 4rem;\r\n  padding: 5px;\r\n`;\r\n","import styled, { createGlobalStyle } from \"styled-components\";\r\nimport { MediaQueries } from \"./styled\";\r\n\r\nexport const GlobalStyles = createGlobalStyle`\r\n\r\n*{\r\n    box-sizing:border-box;\r\n    margin:0;\r\n    padding:0;\r\n}\r\n\r\nhtml, body{\r\n    background:var(--bg-color);\r\n  \r\n    \r\n}\r\n\r\n\r\n:root{\r\n    --primary-font: 'Lora', serif;\r\n    --bg-color: #F6F9FC;\r\n    --primary-color: #7796FE;\r\n    --secondary-color: #FF865B;\r\n    --light-gray-color: #8A8787;\r\n    --label-black-color: #000000;\r\n    --success: #20bf6b;\r\n    --error: #eb4d4b;\r\n    --border-radius: 10px;\r\n    --box-shadow-alert: 0 2rem 4rem rgba(0, 0, 0, 0.25);\r\n    --content-overlay: rgba(0, 0, 0, 0.5);\r\n\r\n}\r\n`;\r\n\r\nexport const theme = {\r\n  justifyContentCenter: \"center\",\r\n  justifyContentEvenly: \"space-evenly\",\r\n  alignItems: \"center\",\r\n  flexDirection: \"row\",\r\n  fontSizeSM: \"20px\",\r\n  fontSizeMD: \"30px\",\r\n  fontSizeLG: \"40px\",\r\n  height: \"50vh\",\r\n  maxWidth: \"300px\",\r\n  formItemHeight: \"32.97px\",\r\n  grayColor: \"var(--light-gray-color)\",\r\n  color: \"var(--label-black-color)\",\r\n  fontWeight: \"200\",\r\n  alignCenter: \"center\",\r\n  alignStart: \"flex-start\",\r\n  top: \"5px\",\r\n  marginTop: \"0px\",\r\n  marginLeft: \"2px\",\r\n  marginTopInput: \"2px\",\r\n  errorLabelWidth: \"0px\",\r\n  left: \"0\",\r\n  h1Top: \"0\",\r\n  labelTop: \"0\",\r\n  gridPadding: \"25px 0 0 0;\",\r\n  gridGap: \"5px\",\r\n  hrWidth: \"100%\",\r\n  lineHeight: \"0px\",\r\n};\r\n\r\nexport const Main = styled.main`\r\n  flex-grow: 1;\r\n`;\r\n\r\nexport const Container = styled.div`\r\n  max-width: 1400px;\r\n  margin: 0 auto;\r\n  padding: 0;\r\n`;\r\n\r\nexport const DisplayFlexMiddle = styled.div`\r\n  display: flex;\r\n  flex-direction: ${(props) => props.theme.flexDirection};\r\n  justify-content: ${(props) =>\r\n    props.evenly\r\n      ? props.theme.justifyContentEvenly\r\n      : props.theme.justifyContentCenter};\r\n  align-items: ${(props) => props.theme.alignItems};\r\n  height: ${(props) => props.theme.height};\r\n`;\r\n\r\nexport const H1 = styled.h1`\r\n  position: relative;\r\n  font-size: ${(props) => props.theme.fontSizeSM};\r\n  max-width: ${(props) => props.theme.maxWidth};\r\n  color: ${(props) => props.theme.grayColor};\r\n  font-weight: ${(props) => props.theme.fontWeight};\r\n  align-self: ${(props) =>\r\n    props.center ? props.theme.alignCenter : props.theme.alignStart};\r\n  left: ${(props) => props.theme.left};\r\n  top: ${(props) => props.theme.h1top};\r\n`;\r\n\r\nexport const H2 = styled.h2`\r\n  position: relative;\r\n  top: ${(props) => props.theme.top};\r\n  font-size: ${(props) => props.theme.fontSizeSM};\r\n  max-width: ${(props) => props.theme.maxWidth};\r\n  color: ${(props) => props.theme.grayColor};\r\n  font-weight: ${(props) => props.theme.fontWeight};\r\n  align-self: ${(props) =>\r\n    props.center ? props.theme.alignCenter : props.theme.alignStart};\r\n`;\r\n\r\nexport const Pragraph = styled.p`\r\n  position: relative;\r\n  top: ${(props) => props.theme.top};\r\n  font-size: ${(props) => props.theme.fontSizeSM};\r\n  max-width: ${(props) => props.theme.maxWidth};\r\n  color: ${(props) => props.theme.grayColor};\r\n  font-weight: ${(props) => props.theme.fontWeight};\r\n  align-self: ${(props) =>\r\n    props.center ? props.theme.alignCenter : props.theme.alignStart};\r\n  line-height: ${(props) => props.theme.lineHeight};\r\n`;\r\n\r\nexport const Header = styled.header`\r\n  display: block;\r\n  position: relative;\r\n  top: 20vh;\r\n  ${MediaQueries(\"tablet\")`\r\n  position: absolute;\r\n  top: 70px;\r\n  `}\r\n`;\r\n\r\nexport const Span = styled.span`\r\n  font-size: ${(props) => props.theme.fontSizeLG};\r\n`;\r\n\r\nexport const SpanColor = styled.span`\r\n  color: ${(props) => props.theme.color};\r\n  display: flex;\r\n  ${MediaQueries(\"mobileL\")`\r\n  font-size:17px;\r\n  `}\r\n`;\r\n\r\nexport const AsteriskSpan = styled.span`\r\n  color: var(--primary-color);\r\n`;\r\nexport const PrimarySpan = styled.span`\r\n  color: var(--primary-color);\r\n  padding-left: 5px;\r\n`;\r\n\r\n// Card\r\n\r\nexport const Card = styled.div`\r\n  border: #fff;\r\n  background-color: #fff;\r\n  border-radius: var(--border-radius);\r\n  width: 373px;\r\n  height: 325px;\r\n  box-shadow: 0 8px 16px 0 var(--content-overlay);\r\n`;\r\n\r\nexport const SmallCard = styled(Card)`\r\n  width: ${(props) => props.theme.maxWidth};\r\n  height: ${(props) => props.theme.height};\r\n`;\r\n\r\nexport const ResultCard = styled(SmallCard)`\r\n  ${MediaQueries(\"tablet\")` width:95%`}\r\n`;\r\n\r\nexport const CardSpacer = styled.div`\r\n  margin-top: 5px;\r\n`;\r\n\r\n// Grid\r\nexport const GridTwo = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(2, 1fr);\r\n  width: 100%;\r\n  padding: ${(props) => props.theme.gridPadding};\r\n  grid-gap: ${(props) => props.theme.gridGap};\r\n\r\n  ${MediaQueries(\"mobileL\")`\r\n    padding: 22px 0 0 10px !important;\r\n  `}\r\n`;\r\n\r\nexport const HRLine = styled.hr`\r\n  color: var(--light-gray-color);\r\n  width: ${(props) => props.theme.hrWidth};\r\n  position: relative;\r\n  margin-top: ${(props) => props.theme.marginTop};\r\n  top: ${(props) => props.theme.top};\r\n`;\r\n\r\nexport const Navigate = styled.a`\r\n  color: var(--primary-color);\r\n  font-size: 35px;\r\n  padding-left: 30px;\r\n`;\r\n","// Time Complexity: 0(n)\r\nexport const formInputCheck = (data) => {\r\n  // loop through array\r\n  for (var x in data) {\r\n    // check if data exist\r\n    if (data[x]) {\r\n      // return data\r\n      return data[x];\r\n    }\r\n  }\r\n};\r\n// Time Complexity: 0(n)\r\nexport const formatPhoneNumber = (ref) => {\r\n  var numbers = ref.current.value.replace(/\\D/g, \"\"),\r\n    char = { 0: \"(\", 3: \") \", 6: \" - \" };\r\n  ref.current.value = \"\";\r\n  for (var i = 0; i < numbers.length; i++) {\r\n    ref.current.value += (char[i] || \"\") + numbers[i];\r\n  }\r\n};\r\n","import React, { useState, useEffect, createRef } from \"react\";\r\nimport ReCAPTCHA from \"react-google-recaptcha\";\r\nimport dotenv from \"dotenv\";\r\ndotenv.config({ path: \"/client/config.env\" });\r\n\r\nexport default function FormCaptcha({ setVerified }) {\r\n  const [load, setLoading] = useState(false);\r\n  //   process.env doesnt work as it showed undefined =(\r\n  const key = \"6LfefU0dAAAAAGc_x-MrFXBSbeTgA_modJtpgP1C\";\r\n  const reCaptchaRef = createRef();\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      setLoading(true);\r\n    }, 1500);\r\n    // console.log(\"reCaptcha Ref-\", reCaptchaRef);\r\n  });\r\n\r\n  return (\r\n    <div style={{ marginTop: \"10px\" }}>\r\n      {load && key && (\r\n        <ReCAPTCHA\r\n          theme='light'\r\n          ref={reCaptchaRef}\r\n          onChange={() => setVerified(true)}\r\n          sitekey={key}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport {\r\n  Container,\r\n  Card,\r\n  CardSpacer,\r\n  theme,\r\n  GridTwo,\r\n  AsteriskSpan,\r\n  H1,\r\n  DisplayFlexMiddle,\r\n} from \"../../styled-components/globalStyled\";\r\nimport { ThemeProvider } from \"styled-components\";\r\nimport {\r\n  FormGroup,\r\n  FormInput,\r\n  FormLabel,\r\n  FormSelect,\r\n  SelectOptions,\r\n  FormButton,\r\n  FormSubmission,\r\n} from \"../../styled-components/styled\";\r\n\r\nimport { formInputCheck, formatPhoneNumber } from \"./algorithms/FormAlgorithm\";\r\nimport ReCAPTCHA from \"../form/formValidation/FormCaptcha\";\r\n\r\nexport default function FormLogic({\r\n  number,\r\n  setNumber,\r\n  numberError,\r\n  lastName,\r\n  setLastName,\r\n  firstName,\r\n  setFirstName,\r\n  email,\r\n  setEmail,\r\n  titleOptions,\r\n  handleFormSubmit,\r\n  title,\r\n  setTitle,\r\n  SmallCard,\r\n  openModal,\r\n  StyledModal,\r\n  afterOpen,\r\n  beforeClose,\r\n  opacity,\r\n  StyledCloseModal,\r\n  FormPreview,\r\n  modalOpen,\r\n  dataArray,\r\n  firstNameError,\r\n  lastNameError,\r\n  emailError,\r\n  termsError,\r\n  setTerms,\r\n  terms,\r\n  countries,\r\n  country,\r\n  setCountry,\r\n  stateArray,\r\n  state,\r\n  setState,\r\n  address,\r\n  setAddress,\r\n  addressError,\r\n  city,\r\n  setCity,\r\n  cityError,\r\n  zipCode,\r\n  setZipCode,\r\n  zipCodeError,\r\n  feetError,\r\n  inchesError,\r\n  setFeet,\r\n  setInches,\r\n  feet,\r\n  inches,\r\n  servicesOptions,\r\n  budgetsOptions,\r\n  service,\r\n  setService,\r\n  budget,\r\n  setBudget,\r\n}) {\r\n  const firstRender = useRef(true);\r\n  const [verified, setVerified] = useState(false);\r\n  const formatPhoneRef = useRef();\r\n\r\n  useEffect(() => {\r\n    if (firstRender.current) {\r\n      firstRender.current = false;\r\n      return;\r\n    }\r\n\r\n    // getElementById();\r\n  }, []);\r\n\r\n  // const getElementById = () => {\r\n  //   if (emailError)\r\n  //     emailError\r\n  //       ? (document.getElementById(\"email\").style.borderColor = \"red\")\r\n  //       : (document.getElementById(\"email\").style.borderColor = \"green\");\r\n  //   else {\r\n  //     lastNameError\r\n  //       ? (document.getElementById(\"lastName\").style.borderColor = \"red\")\r\n  //       : (document.getElementById(\"lastName\").style.borderColor = \"green\");\r\n  //     nameError\r\n  //       ? (document.getElementById(\"firstName\").style.borderColor = \"red\")\r\n  //       : (document.getElementById(\"firstName\").style.borderColor = \"green\");\r\n  //   }\r\n  // };\r\n\r\n  return (\r\n    <Container onSubmit={handleFormSubmit}>\r\n      <ThemeProvider theme={theme}>\r\n        <Card>\r\n          <H1\r\n            theme={{\r\n              h1top: \"15px\",\r\n              left: \"15px\",\r\n              grayColor: \"var(--light-gray-color)\",\r\n              fontSizeSM: \"20px\",\r\n              fontWeight: \"200\",\r\n            }}\r\n          >\r\n            Required Fields <AsteriskSpan>* </AsteriskSpan>\r\n          </H1>\r\n          <GridTwo theme={{ gridPadding: \"25px 0 0 0\" }}>\r\n            {/* Last Name */}\r\n            <FormGroup>\r\n              <FormLabel htmlForm='lastName' theme={{ fontSizeSM: \"17px\" }}>\r\n                Last Name <AsteriskSpan>* </AsteriskSpan>\r\n              </FormLabel>\r\n              <FormInput\r\n                type='text'\r\n                id='lastName'\r\n                name='lastName'\r\n                placeholder='Doe'\r\n                maxLength='40'\r\n                value={lastName}\r\n                onChange={(e) => setLastName(e.target.value)}\r\n                theme={{ maxWidth: \"152px\", formItemHeight: \"32.97px\" }}\r\n                required\r\n              />\r\n\r\n              {lastNameError && lastName && (\r\n                <FormLabel\r\n                  theme={{\r\n                    color: \"var(--error)\",\r\n                    fontSizeSM: \"15px\",\r\n                    marginTop: \"2px\",\r\n                    errorLabelWidth: \"153px\",\r\n                  }}\r\n                >\r\n                  {lastNameError}\r\n                </FormLabel>\r\n              )}\r\n            </FormGroup>\r\n            {/* First Name */}\r\n            <FormGroup>\r\n              <FormLabel htmlForm='firstName' theme={{ fontSizeSM: \"17px\" }}>\r\n                First Name <AsteriskSpan>* </AsteriskSpan>\r\n              </FormLabel>\r\n              <FormInput\r\n                type='text'\r\n                id='firstName'\r\n                name='firstName'\r\n                placeholder='John'\r\n                maxLength='40'\r\n                value={firstName}\r\n                onChange={(e) => setFirstName(e.target.value)}\r\n                theme={{ maxWidth: \"152px\", formItemHeight: \"32.97px\" }}\r\n                required\r\n              />\r\n\r\n              {firstNameError && firstName && (\r\n                <FormLabel\r\n                  theme={{\r\n                    color: \"var(--error)\",\r\n                    fontSizeSM: \"15px\",\r\n                    marginTop: \"2px\",\r\n                    errorLabelWidth: \"153px\",\r\n                  }}\r\n                >\r\n                  {firstNameError}\r\n                </FormLabel>\r\n              )}\r\n            </FormGroup>\r\n          </GridTwo>\r\n          {/* Preferred Title */}\r\n          <FormGroup>\r\n            <FormLabel htmlForm='title' theme={{ fontSizeSM: \"17px\" }}>\r\n              Preferred Title <AsteriskSpan>* </AsteriskSpan>\r\n            </FormLabel>\r\n            <FormSelect\r\n              onChange={(e) => setTitle(e.target.value)}\r\n              theme={{ maxWidth: \"340px\", formItemHeight: \"32.97px\" }}\r\n            >\r\n              {titleOptions.map((options) => (\r\n                <SelectOptions\r\n                  id='title'\r\n                  value={options.title}\r\n                  key={options.id}\r\n                  required\r\n                >\r\n                  {options.title}\r\n                </SelectOptions>\r\n              ))}\r\n            </FormSelect>\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <FormLabel htmlForm='email' theme={{ fontSizeSM: \"17px\" }}>\r\n              Email <AsteriskSpan>* </AsteriskSpan>\r\n            </FormLabel>\r\n            <FormInput\r\n              type='email'\r\n              id='email'\r\n              name='email'\r\n              placeholder='JohnDoe@yahoo.com'\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              theme={{ maxWidth: \"340px\", formItemHeight: \"32.97px\" }}\r\n              required\r\n            />\r\n            {emailError && (\r\n              <FormLabel\r\n                theme={{\r\n                  color: \"var(--error)\",\r\n                  fontSizeSM: \"15px\",\r\n                  marginTop: \"7px\",\r\n                }}\r\n              >\r\n                {emailError}\r\n              </FormLabel>\r\n            )}\r\n          </FormGroup>\r\n        </Card>\r\n        <CardSpacer />\r\n        <Card>\r\n          {/* Country/Region */}\r\n          <FormGroup>\r\n            <FormLabel\r\n              htmlForm='countryRegion'\r\n              theme={{ fontSizeSM: \"17px\", marginTop: \"10px\" }}\r\n            >\r\n              Country / Region <AsteriskSpan>* </AsteriskSpan>\r\n            </FormLabel>\r\n            <FormSelect\r\n              onChange={(e) => setCountry(e.target.value)}\r\n              theme={{ maxWidth: \"340px\", formItemHeight: \"32.97px\" }}\r\n            >\r\n              {countries.map((country, index) => (\r\n                <SelectOptions\r\n                  id='countryRegion'\r\n                  value={country}\r\n                  key={`country-${index}`}\r\n                  required\r\n                >\r\n                  {country}\r\n                </SelectOptions>\r\n              ))}\r\n            </FormSelect>\r\n          </FormGroup>\r\n          {/* Street Address */}\r\n          <FormGroup>\r\n            <FormLabel htmlForm='address' theme={{ fontSizeSM: \"17px\" }}>\r\n              Street Address <AsteriskSpan>* </AsteriskSpan>\r\n            </FormLabel>\r\n            <FormInput\r\n              type='text'\r\n              id='address'\r\n              name='address'\r\n              placeholder='1600 Holloway Ave'\r\n              value={address}\r\n              onChange={(e) => setAddress(e.target.value)}\r\n              theme={{ maxWidth: \"340px\", formItemHeight: \"32.97px\" }}\r\n              required\r\n            />\r\n          </FormGroup>\r\n          {addressError && (\r\n            <FormLabel\r\n              theme={{\r\n                color: \"var(--error)\",\r\n                fontSizeSM: \"15px\",\r\n                labelTop: \"5px\",\r\n                marginLeft: \"16px\",\r\n              }}\r\n            >\r\n              {addressError}\r\n            </FormLabel>\r\n          )}\r\n          {/* City */}\r\n          <FormGroup>\r\n            <FormLabel htmlForm='city' theme={{ fontSizeSM: \"17px\" }}>\r\n              City <AsteriskSpan>* </AsteriskSpan>\r\n            </FormLabel>\r\n            <FormInput\r\n              type='text'\r\n              id='city'\r\n              name='city'\r\n              placeholder='San Francisco'\r\n              value={city}\r\n              onChange={(e) => setCity(e.target.value)}\r\n              theme={{ maxWidth: \"340px\", formItemHeight: \"32.97px\" }}\r\n              required\r\n            />\r\n          </FormGroup>\r\n          {cityError && (\r\n            <FormLabel\r\n              theme={{\r\n                color: \"var(--error)\",\r\n                fontSizeSM: \"15px\",\r\n                labelTop: \"5px\",\r\n                marginLeft: \"16px\",\r\n              }}\r\n            >\r\n              {cityError}\r\n            </FormLabel>\r\n          )}\r\n          {/* State, Zip code */}\r\n          <GridTwo theme={{ gridPadding: \"5px 0 0 0\" }}>\r\n            {/* Last Name */}\r\n            <FormGroup>\r\n              <FormLabel htmlForm='state' theme={{ fontSizeSM: \"17px\" }}>\r\n                State <AsteriskSpan>* </AsteriskSpan>\r\n              </FormLabel>\r\n              <FormSelect\r\n                onChange={(e) => setState(e.target.value)}\r\n                theme={{ maxWidth: \"152px\", formItemHeight: \"32.97px\" }}\r\n              >\r\n                {stateArray.map((state, index) => (\r\n                  <SelectOptions\r\n                    id='countryRegion'\r\n                    value={state}\r\n                    key={`states-${index}`}\r\n                    required\r\n                  >\r\n                    {state}\r\n                  </SelectOptions>\r\n                ))}\r\n              </FormSelect>\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <FormLabel htmlForm='zipcode' theme={{ fontSizeSM: \"17px\" }}>\r\n                Zip Code <AsteriskSpan>* </AsteriskSpan>\r\n              </FormLabel>\r\n              <FormInput\r\n                type='94112'\r\n                id='zipcode'\r\n                name='firstName'\r\n                placeholder='94116'\r\n                maxLength='5'\r\n                value={zipCode}\r\n                onChange={(e) => setZipCode(e.target.value)}\r\n                theme={{ maxWidth: \"152px\", formItemHeight: \"32.97px\" }}\r\n                required\r\n              />\r\n\r\n              {zipCodeError && (\r\n                <FormLabel\r\n                  theme={{\r\n                    color: \"var(--error)\",\r\n                    fontSizeSM: \"15px\",\r\n                    labelTop: \"5px\",\r\n                    marginLeft: \"2px\",\r\n                  }}\r\n                >\r\n                  {zipCodeError}\r\n                </FormLabel>\r\n              )}\r\n            </FormGroup>\r\n          </GridTwo>\r\n        </Card>\r\n        <CardSpacer />\r\n        <SmallCard theme={{ maxWidth: \"373px\", height: \"375px\" }}>\r\n          <GridTwo theme={{ gridPadding: \"5px 0 0 0\" }}>\r\n            {/* Height */}\r\n            <FormGroup>\r\n              <FormLabel htmlForm='height' theme={{ fontSizeSM: \"17px\" }}>\r\n                Your Height <AsteriskSpan> (optional) </AsteriskSpan>\r\n              </FormLabel>\r\n              <FormInput\r\n                type='text'\r\n                id='feet'\r\n                name='height'\r\n                placeholder='5'\r\n                maxLength='2'\r\n                value={feet}\r\n                onChange={(e) => setFeet(e.target.value)}\r\n                theme={{\r\n                  maxWidth: \"152px\",\r\n                  formItemHeight: \"32.97px\",\r\n                  marginTopInput: \"5px\",\r\n                }}\r\n              />\r\n              <FormLabel\r\n                htmlForm='feet'\r\n                theme={{\r\n                  fontSizeSM: \"17px\",\r\n                  marginTop: \"2px\",\r\n                  color: \"var( --light-gray-color)\",\r\n                }}\r\n              >\r\n                Feet {\"\"}\r\n                {feetError && (\r\n                  <FormLabel\r\n                    theme={{\r\n                      color: \"var(--error)\",\r\n                      fontSizeSM: \"15px\",\r\n                      labelTop: \"-1px\",\r\n                      marginLeft: \"45px\",\r\n                    }}\r\n                  >\r\n                    {feetError}\r\n                  </FormLabel>\r\n                )}\r\n              </FormLabel>\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <FormInput\r\n                type='text'\r\n                id='inches'\r\n                name='inches'\r\n                placeholder='5'\r\n                maxLength='2'\r\n                value={inches}\r\n                onChange={(e) => setInches(e.target.value)}\r\n                theme={{\r\n                  maxWidth: \"152px\",\r\n                  formItemHeight: \"32.97px\",\r\n                  marginTopInput: \"22px\",\r\n                }}\r\n              />\r\n              <FormLabel\r\n                htmlForm='inches'\r\n                theme={{\r\n                  fontSizeSM: \"17px\",\r\n                  marginTop: \"2px\",\r\n                  color: \"var( --light-gray-color)\",\r\n                }}\r\n              >\r\n                Inches {\"\"}\r\n                {inchesError && (\r\n                  <FormLabel\r\n                    theme={{\r\n                      color: \"var(--error)\",\r\n                      fontSizeSM: \"15px\",\r\n                      labelTop: \"-1px\",\r\n                      marginLeft: \"15px\",\r\n                    }}\r\n                  >\r\n                    {inchesError}\r\n                  </FormLabel>\r\n                )}\r\n              </FormLabel>\r\n            </FormGroup>\r\n          </GridTwo>\r\n          {/* Phone Number */}\r\n          <FormGroup>\r\n            <FormLabel htmlForm='phoneNumber' theme={{ fontSizeSM: \"17px\" }}>\r\n              Phone Number <AsteriskSpan> (optional) </AsteriskSpan>\r\n            </FormLabel>\r\n\r\n            <FormInput\r\n              ref={formatPhoneRef}\r\n              type='tel'\r\n              id='phoneNumber'\r\n              name='phoneNumber'\r\n              placeholder='(xxx) xxx - xxxx'\r\n              maxLength='16'\r\n              value={number}\r\n              onChange={(e) => {\r\n                formatPhoneNumber(formatPhoneRef, e.target.value);\r\n                setNumber(e.target.value);\r\n              }}\r\n              theme={{ maxWidth: \"340px\", formItemHeight: \"32.97px\" }}\r\n            />\r\n          </FormGroup>\r\n\r\n          {numberError && (\r\n            <FormLabel\r\n              theme={{\r\n                color: \"var(--error)\",\r\n                fontSizeSM: \"15px\",\r\n                labelTop: \"5px\",\r\n                marginLeft: \"15px\",\r\n              }}\r\n            >\r\n              {numberError}\r\n            </FormLabel>\r\n          )}\r\n\r\n          {/* Services */}\r\n          <FormGroup>\r\n            <FormLabel htmlForm='services' theme={{ fontSizeSM: \"17px\" }}>\r\n              Services <AsteriskSpan> (optional) </AsteriskSpan>\r\n            </FormLabel>\r\n            <FormSelect\r\n              onChange={(e) => setService(e.target.value)}\r\n              theme={{ maxWidth: \"340px\", formItemHeight: \"32.97px\" }}\r\n            >\r\n              {servicesOptions.map((options) => (\r\n                <SelectOptions\r\n                  // id='services'\r\n                  value={options.service}\r\n                  key={options.id}\r\n                >\r\n                  {options.service}\r\n                </SelectOptions>\r\n              ))}\r\n            </FormSelect>\r\n          </FormGroup>\r\n          {/* Budget */}\r\n          <FormGroup>\r\n            <FormLabel htmlForm='budget' theme={{ fontSizeSM: \"17px\" }}>\r\n              Budget <AsteriskSpan> (optional) </AsteriskSpan>\r\n            </FormLabel>\r\n            <FormSelect\r\n              onChange={(e) => setBudget(e.target.value)}\r\n              theme={{ maxWidth: \"340px\", formItemHeight: \"32.97px\" }}\r\n            >\r\n              {budgetsOptions.map((options) => (\r\n                <SelectOptions\r\n                  id='budget'\r\n                  value={options.budget}\r\n                  key={options.id}\r\n                >\r\n                  {options.budget}\r\n                </SelectOptions>\r\n              ))}\r\n            </FormSelect>\r\n          </FormGroup>\r\n        </SmallCard>\r\n\r\n        {/* Preview Form  */}\r\n        {formInputCheck(dataArray) ? (\r\n          <>\r\n            <CardSpacer />\r\n            {firstNameError ||\r\n            lastNameError ||\r\n            emailError ||\r\n            termsError ||\r\n            cityError ||\r\n            zipCodeError ||\r\n            feetError ||\r\n            inchesError ||\r\n            numberError ||\r\n            addressError ||\r\n            !address ||\r\n            !city ? null : (\r\n              <SmallCard theme={{ maxWidth: \"373px\", height: \"55px\" }}>\r\n                <FormGroup>\r\n                  <FormButton\r\n                    onClick={openModal}\r\n                    // disabled={!email || !firstName || !lastName || !title}\r\n                    theme={{ maxWidth: \"340px\", formItemHeight: \"32.97px\" }}\r\n                  >\r\n                    Preview Form\r\n                  </FormButton>\r\n                </FormGroup>\r\n              </SmallCard>\r\n            )}\r\n\r\n            <StyledModal\r\n              isOpen={modalOpen}\r\n              afterOpen={afterOpen}\r\n              beforeClose={beforeClose}\r\n              onBackgroundClick={openModal}\r\n              backgroundProps={{ opacity }}\r\n            >\r\n              <StyledCloseModal onClick={openModal}>&times;</StyledCloseModal>\r\n\r\n              <FormPreview\r\n                last={lastName}\r\n                first={firstName}\r\n                title={title}\r\n                email={email}\r\n                country={country}\r\n                state={state}\r\n                address={address}\r\n                feet={feet}\r\n                inches={inches}\r\n                zipcode={zipCode}\r\n                number={number}\r\n                service={service}\r\n                budget={budget}\r\n                city={city}\r\n              />\r\n            </StyledModal>\r\n          </>\r\n        ) : null}\r\n        <CardSpacer />\r\n        {/* Submit Form */}\r\n        <Card>\r\n          <FormGroup>\r\n            <FormSubmission>\r\n              <FormLabel\r\n                htmlFor='agree'\r\n                theme={{\r\n                  fontSizeSM: \"20px\",\r\n                  color: \"var( --light-gray-color)\",\r\n                }}\r\n              >\r\n                By submitting, I agreed to the {\"\"}\r\n                <NavLink to='#' style={{ color: \"var(--primary-color)\" }}>\r\n                  Terms\r\n                </NavLink>\r\n                <AsteriskSpan>* </AsteriskSpan>\r\n              </FormLabel>\r\n              <FormInput\r\n                type='checkbox'\r\n                id='agree'\r\n                name='agreed'\r\n                value={terms}\r\n                onChange={() => setTerms(true)}\r\n                theme={{ maxWidth: \"26px\", formItemHeight: \"13px\" }}\r\n              />\r\n              {!terms && (\r\n                <FormLabel\r\n                  theme={{\r\n                    color: \"var(--error)\",\r\n                    fontSizeSM: \"15px\",\r\n                  }}\r\n                >\r\n                  You must agree to our terms by checking the box.\r\n                </FormLabel>\r\n              )}\r\n              <ReCAPTCHA setVerified={setVerified} />\r\n              {!verified ? (\r\n                <FormLabel\r\n                  theme={{\r\n                    fontSizeSM: \"16px\",\r\n                    color: \"var( --error)\",\r\n                  }}\r\n                >\r\n                  Please verify that you're not a bot!\r\n                </FormLabel>\r\n              ) : null}\r\n              <FormButton\r\n                type='submit'\r\n                disabled={\r\n                  !email ||\r\n                  !firstName ||\r\n                  !lastName ||\r\n                  !zipCode ||\r\n                  !address ||\r\n                  !terms ||\r\n                  !city ||\r\n                  !verified\r\n                }\r\n                theme={{ maxWidth: \"340px\", formItemHeight: \"32.97px\" }}\r\n              >\r\n                Submit\r\n              </FormButton>\r\n            </FormSubmission>\r\n          </FormGroup>\r\n        </Card>\r\n      </ThemeProvider>\r\n    </Container>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Map, GoogleApiWrapper, Marker, InfoWindow } from \"google-maps-react\";\r\nimport axios from \"axios\";\r\nimport dotenv from \"dotenv\";\r\ndotenv.config({ path: \"../../config.env\" });\r\nconst mapStyles = {\r\n  //   marginRight: \"auto\",\r\n  marginTop: \"-12px\",\r\n  width: \"99.5%\",\r\n  height: \"88.5%\",\r\n  position: \"relative\",\r\n  border: \"1px solid var(--light-gray-color)\",\r\n  borderRadius: \"5px\",\r\n};\r\nfunction GoogleMapContainer(props) {\r\n  const [showInfoWindow, setShowInfoWindow] = useState(false);\r\n  const [activeMarker, setActiveMarker] = useState({});\r\n  const [selectedPlace, setSelectedPlace] = useState({});\r\n  const [latLon, setLatLon] = useState({ lat: 1, lng: 1 });\r\n\r\n  useEffect(() => {\r\n    getCoordinates();\r\n  }, []);\r\n\r\n  const getCoordinates = async () => {\r\n    const url = `https://maps.googleapis.com/maps/api/geocode/json?address=${props.mapAddress}&key=AIzaSyAuu3XkFNEVFKWbMgxfl62l1Gt-k3HG_V4`;\r\n    await axios\r\n      .get(url)\r\n      .then((response) => {\r\n        console.log(response);\r\n        setLatLon(response.data.results[0].geometry.location);\r\n      })\r\n      .catch((error) => console.log(error));\r\n  };\r\n\r\n  const onMarkerClick = (props, marker) => {\r\n    setSelectedPlace(props);\r\n    setActiveMarker(marker);\r\n    setShowInfoWindow(true);\r\n  };\r\n\r\n  const onClose = () => {\r\n    if (showInfoWindow) {\r\n      setShowInfoWindow(false);\r\n      setActiveMarker(null);\r\n    }\r\n  };\r\n\r\n  const { google } = props;\r\n\r\n  return (\r\n    <Map\r\n      className={`${props.isActive}`}\r\n      google={google}\r\n      zoom={12}\r\n      style={mapStyles}\r\n      initialCenter={latLon}\r\n      center={latLon}\r\n    >\r\n      <Marker\r\n        onClick={onMarkerClick}\r\n        name={props.mapAddress}\r\n        position={latLon}\r\n      />\r\n      <InfoWindow\r\n        marker={activeMarker}\r\n        visible={showInfoWindow}\r\n        onClose={onClose}\r\n      >\r\n        <div>\r\n          <h4 className='map-name'>{selectedPlace.name}</h4>\r\n        </div>\r\n      </InfoWindow>\r\n    </Map>\r\n  );\r\n}\r\n\r\nexport default GoogleApiWrapper({\r\n  apiKey: process.env.REACT_APP_GOOGLE_MAP_API_KEY,\r\n})(GoogleMapContainer);\r\n","export const countries = [\r\n  \"Afghanistan\",\r\n  \"Albania\",\r\n  \"Algeria\",\r\n  \"Andorra\",\r\n  \"Angola\",\r\n  \"Anguilla\",\r\n  \"Antigua &amp; Barbuda\",\r\n  \"Argentina\",\r\n  \"Armenia\",\r\n  \"Aruba\",\r\n  \"Australia\",\r\n  \"Austria\",\r\n  \"Azerbaijan\",\r\n  \"Bahamas\",\r\n  \"Bahrain\",\r\n  \"Bangladesh\",\r\n  \"Barbados\",\r\n  \"Belarus\",\r\n  \"Belgium\",\r\n  \"Belize\",\r\n  \"Benin\",\r\n  \"Bermuda\",\r\n  \"Bhutan\",\r\n  \"Bolivia\",\r\n  \"Bosnia &amp; Herzegovina\",\r\n  \"Botswana\",\r\n  \"Brazil\",\r\n  \"British Virgin Islands\",\r\n  \"Brunei\",\r\n  \"Bulgaria\",\r\n  \"Burkina Faso\",\r\n  \"Burundi\",\r\n  \"Cambodia\",\r\n  \"Cameroon\",\r\n  \"Canada\",\r\n  \"Cape Verde\",\r\n  \"Cayman Islands\",\r\n  \"Chad\",\r\n  \"Chile\",\r\n  \"China\",\r\n  \"Colombia\",\r\n  \"Congo\",\r\n  \"Cook Islands\",\r\n  \"Costa Rica\",\r\n  \"Cote D Ivoire\",\r\n  \"Croatia\",\r\n  \"Cruise Ship\",\r\n  \"Cuba\",\r\n  \"Cyprus\",\r\n  \"Czech Republic\",\r\n  \"Denmark\",\r\n  \"Djibouti\",\r\n  \"Dominica\",\r\n  \"Dominican Republic\",\r\n  \"Ecuador\",\r\n  \"Egypt\",\r\n  \"El Salvador\",\r\n  \"Equatorial Guinea\",\r\n  \"Estonia\",\r\n  \"Ethiopia\",\r\n  \"Falkland Islands\",\r\n  \"Faroe Islands\",\r\n  \"Fiji\",\r\n  \"Finland\",\r\n  \"France\",\r\n  \"French Polynesia\",\r\n  \"French West Indies\",\r\n  \"Gabon\",\r\n  \"Gambia\",\r\n  \"Georgia\",\r\n  \"Germany\",\r\n  \"Ghana\",\r\n  \"Gibraltar\",\r\n  \"Greece\",\r\n  \"Greenland\",\r\n  \"Grenada\",\r\n  \"Guam\",\r\n  \"Guatemala\",\r\n  \"Guernsey\",\r\n  \"Guinea\",\r\n  \"Guinea Bissau\",\r\n  \"Guyana\",\r\n  \"Haiti\",\r\n  \"Honduras\",\r\n  \"Hong Kong\",\r\n  \"Hungary\",\r\n  \"Iceland\",\r\n  \"India\",\r\n  \"Indonesia\",\r\n  \"Iran\",\r\n  \"Iraq\",\r\n  \"Ireland\",\r\n  \"Isle of Man\",\r\n  \"Israel\",\r\n  \"Italy\",\r\n  \"Jamaica\",\r\n  \"Japan\",\r\n  \"Jersey\",\r\n  \"Jordan\",\r\n  \"Kazakhstan\",\r\n  \"Kenya\",\r\n  \"Kuwait\",\r\n  \"Kyrgyz Republic\",\r\n  \"Laos\",\r\n  \"Latvia\",\r\n  \"Lebanon\",\r\n  \"Lesotho\",\r\n  \"Liberia\",\r\n  \"Libya\",\r\n  \"Liechtenstein\",\r\n  \"Lithuania\",\r\n  \"Luxembourg\",\r\n  \"Macau\",\r\n  \"Macedonia\",\r\n  \"Madagascar\",\r\n  \"Malawi\",\r\n  \"Malaysia\",\r\n  \"Maldives\",\r\n  \"Mali\",\r\n  \"Malta\",\r\n  \"Mauritania\",\r\n  \"Mauritius\",\r\n  \"Mexico\",\r\n  \"Moldova\",\r\n  \"Monaco\",\r\n  \"Mongolia\",\r\n  \"Montenegro\",\r\n  \"Montserrat\",\r\n  \"Morocco\",\r\n  \"Mozambique\",\r\n  \"Namibia\",\r\n  \"Nepal\",\r\n  \"Netherlands\",\r\n  \"Netherlands Antilles\",\r\n  \"New Caledonia\",\r\n  \"New Zealand\",\r\n  \"Nicaragua\",\r\n  \"Niger\",\r\n  \"Nigeria\",\r\n  \"Norway\",\r\n  \"Oman\",\r\n  \"Pakistan\",\r\n  \"Palestine\",\r\n  \"Panama\",\r\n  \"Papua New Guinea\",\r\n  \"Paraguay\",\r\n  \"Peru\",\r\n  \"Philippines\",\r\n  \"Poland\",\r\n  \"Portugal\",\r\n  \"Puerto Rico\",\r\n  \"Qatar\",\r\n  \"Reunion\",\r\n  \"Romania\",\r\n  \"Russia\",\r\n  \"Rwanda\",\r\n  \"Saint Pierre &amp; Miquelon\",\r\n  \"Samoa\",\r\n  \"San Marino\",\r\n  \"Satellite\",\r\n  \"Saudi Arabia\",\r\n  \"Senegal\",\r\n  \"Serbia\",\r\n  \"Seychelles\",\r\n  \"Sierra Leone\",\r\n  \"Singapore\",\r\n  \"Slovakia\",\r\n  \"Slovenia\",\r\n  \"South Africa\",\r\n  \"South Korea\",\r\n  \"Spain\",\r\n  \"Sri Lanka\",\r\n  \"St Kitts &amp; Nevis\",\r\n  \"St Lucia\",\r\n  \"St Vincent\",\r\n  \"St. Lucia\",\r\n  \"Sudan\",\r\n  \"Suriname\",\r\n  \"Swaziland\",\r\n  \"Sweden\",\r\n  \"Switzerland\",\r\n  \"Syria\",\r\n  \"Taiwan\",\r\n  \"Tajikistan\",\r\n  \"Tanzania\",\r\n  \"Thailand\",\r\n  \"Timor L'Este\",\r\n  \"Togo\",\r\n  \"Tonga\",\r\n  \"Trinidad &amp; Tobago\",\r\n  \"Tunisia\",\r\n  \"Turkey\",\r\n  \"Turkmenistan\",\r\n  \"Turks &amp; Caicos\",\r\n  \"Uganda\",\r\n  \"Ukraine\",\r\n  \"United Arab Emirates\",\r\n  \"United Kingdom\",\r\n  \"United States\",\r\n  \"United States Minor Outlying Islands\",\r\n  \"Uruguay\",\r\n  \"Uzbekistan\",\r\n  \"Venezuela\",\r\n  \"Vietnam\",\r\n  \"Virgin Islands (US)\",\r\n  \"Yemen\",\r\n  \"Zambia\",\r\n  \"Zimbabwe\",\r\n];\r\n","export const stateArray = [\r\n  \"AL\",\r\n  \"AK\",\r\n  \"AS\",\r\n  \"AZ\",\r\n  \"AR\",\r\n  \"CA\",\r\n  \"CO\",\r\n  \"CT\",\r\n  \"DE\",\r\n  \"DC\",\r\n  \"FM\",\r\n  \"FL\",\r\n  \"GA\",\r\n  \"GU\",\r\n  \"HI\",\r\n  \"ID\",\r\n  \"IL\",\r\n  \"IN\",\r\n  \"IA\",\r\n  \"KS\",\r\n  \"KY\",\r\n  \"LA\",\r\n  \"ME\",\r\n  \"MH\",\r\n  \"MD\",\r\n  \"MA\",\r\n  \"MI\",\r\n  \"MN\",\r\n  \"MS\",\r\n  \"MO\",\r\n  \"MT\",\r\n  \"NE\",\r\n  \"NV\",\r\n  \"NH\",\r\n  \"NJ\",\r\n  \"NM\",\r\n  \"NY\",\r\n  \"NC\",\r\n  \"ND\",\r\n  \"MP\",\r\n  \"OH\",\r\n  \"OK\",\r\n  \"OR\",\r\n  \"PW\",\r\n  \"PA\",\r\n  \"PR\",\r\n  \"RI\",\r\n  \"SC\",\r\n  \"SD\",\r\n  \"TN\",\r\n  \"TX\",\r\n  \"UT\",\r\n  \"VT\",\r\n  \"VI\",\r\n  \"VA\",\r\n  \"WA\",\r\n  \"WV\",\r\n  \"WI\",\r\n  \"WY\",\r\n];\r\n","export const titleOptions = [\r\n  { id: 1, title: \"None\" },\r\n  { id: 2, title: \"Student\" },\r\n  { id: 3, title: \"Professor\" },\r\n  { id: 4, title: \"Staff\" },\r\n  { id: 5, title: \"Retired\" },\r\n];\r\n\r\nexport const servicesOptions = [\r\n  { id: 1, service: \"E-mail\" },\r\n  { id: 2, service: \"Facebook\" },\r\n  { id: 3, service: \"Twitter\" },\r\n  { id: 4, service: \"Surface Mail\" },\r\n  { id: 5, service: \"Personal Visit\" },\r\n];\r\n\r\nexport const budgetsOptions = [\r\n  { id: 1, budget: \"< $50\" },\r\n  { id: 2, budget: \"$50 - $100\" },\r\n  { id: 3, budget: \"> $100\" },\r\n];\r\n","import React from \"react\";\r\nimport {\r\n  Container,\r\n  DisplayFlexMiddle,\r\n  CardSpacer,\r\n  theme,\r\n  H1,\r\n  H2,\r\n  Pragraph,\r\n  SpanColor,\r\n  HRLine,\r\n  PrimarySpan,\r\n  GridTwo,\r\n} from \"../../styled-components/globalStyled\";\r\nimport GoogleMapContainer from \"../../components/map/GoogleMapContainer\";\r\nimport { PreviewForm } from \"../../styled-components/styled\";\r\nimport { ThemeProvider } from \"styled-components\";\r\nimport { formInputCheck } from \"./algorithms/FormAlgorithm\";\r\nimport { countries } from \"../../components/form/data/countries\";\r\nimport { stateArray } from \"../../components/form/data/states\";\r\nimport {\r\n  budgetsOptions,\r\n  servicesOptions,\r\n} from \"../../components/form/data/selects\";\r\nexport default function FormPreview(props, { isActive }) {\r\n  var propsCheck = [\r\n    props.last,\r\n    props.first,\r\n    props.title,\r\n    props.email,\r\n    props.country,\r\n    props.state,\r\n    props.address,\r\n    props.city,\r\n    props.zipcode,\r\n    props.feet,\r\n    props.inches,\r\n    props.number,\r\n    props.service,\r\n    props.budget,\r\n  ];\r\n  // if serevice/budget is null use first ele\r\n  const budget = budgetsOptions[0];\r\n  const service = servicesOptions[0];\r\n\r\n  return (\r\n    <Container>\r\n      <CardSpacer />\r\n      <ThemeProvider theme={theme}>\r\n        {formInputCheck(propsCheck) ? (\r\n          <PreviewForm>\r\n            <H1\r\n              theme={{\r\n                grayColor: \"var(--label-black-color)\",\r\n                fontSizeSM: \"25px\",\r\n              }}\r\n            >\r\n              Preview of Form Submission\r\n            </H1>\r\n            <GridTwo theme={{ gridGap: \"34px\", gridPadding: \"25px 0 0 0\" }}>\r\n              <DisplayFlexMiddle\r\n                theme={{\r\n                  height: \"300px\",\r\n                  alignItems: \"flex-start\",\r\n                  flexDirection: \"column\",\r\n                  justifyContentCenter: \"center\",\r\n                }}\r\n              >\r\n                <H2\r\n                  center\r\n                  theme={{\r\n                    grayColor: \"var(--primary-color)\",\r\n                    maxWidth: \"200px\",\r\n                    fontWeight: \"200\",\r\n                    alignCenter: \"center\",\r\n                  }}\r\n                >\r\n                  {props.last || props.first ? (\r\n                    <div>{props.last + \" \" + props.first}</div>\r\n                  ) : null}\r\n                </H2>\r\n\r\n                <Pragraph\r\n                  theme={{\r\n                    fontSizeSM: \"20px\",\r\n                    fontWeight: \"200\",\r\n                    top: \"5px\",\r\n                  }}\r\n                >\r\n                  {props.title ? (\r\n                    <SpanColor>\r\n                      Preferred Title: <PrimarySpan>{props.title}</PrimarySpan>\r\n                    </SpanColor>\r\n                  ) : (\r\n                    <SpanColor>\r\n                      Preferred Title: <PrimarySpan>None</PrimarySpan>\r\n                    </SpanColor>\r\n                  )}\r\n                </Pragraph>\r\n                <Pragraph\r\n                  theme={{\r\n                    fontSizeSM: \"20px\",\r\n                    fontWeight: \"200\",\r\n                    top: \"5px\",\r\n                  }}\r\n                >\r\n                  {props.email ? (\r\n                    <SpanColor>\r\n                      Email: <PrimarySpan>{props.email}</PrimarySpan>\r\n                    </SpanColor>\r\n                  ) : null}\r\n                </Pragraph>\r\n                <HRLine\r\n                  theme={{ marginTop: \"10px\", top: \"10px\", hrWidth: \"100%\" }}\r\n                ></HRLine>\r\n                <Pragraph\r\n                  theme={{\r\n                    fontSizeSM: \"20px\",\r\n                    fontWeight: \"200\",\r\n                    top: \"20px\",\r\n                  }}\r\n                >\r\n                  {props.country ? (\r\n                    <SpanColor>\r\n                      Country/Region: <PrimarySpan>{props.country}</PrimarySpan>\r\n                    </SpanColor>\r\n                  ) : (\r\n                    <SpanColor>\r\n                      Country/Region: <PrimarySpan>{countries[0]}</PrimarySpan>\r\n                    </SpanColor>\r\n                  )}\r\n                </Pragraph>\r\n                <Pragraph\r\n                  theme={{\r\n                    fontSizeSM: \"20px\",\r\n                    fontWeight: \"200\",\r\n                    top: \"20px\",\r\n                  }}\r\n                >\r\n                  {props.address ? (\r\n                    <SpanColor>\r\n                      Address: <PrimarySpan>{props.address}</PrimarySpan>\r\n                    </SpanColor>\r\n                  ) : null}\r\n                </Pragraph>\r\n                <Pragraph\r\n                  theme={{\r\n                    fontSizeSM: \"20px\",\r\n                    fontWeight: \"200\",\r\n                    top: \"20px\",\r\n                  }}\r\n                >\r\n                  {props.city ? (\r\n                    <SpanColor>\r\n                      City: <PrimarySpan>{props.city}</PrimarySpan>\r\n                    </SpanColor>\r\n                  ) : null}\r\n                </Pragraph>\r\n                <Pragraph\r\n                  theme={{\r\n                    fontSizeSM: \"20px\",\r\n                    fontWeight: \"200\",\r\n                    top: \"20px\",\r\n                  }}\r\n                >\r\n                  {props.state ? (\r\n                    <SpanColor>\r\n                      State: <PrimarySpan>{props.state}</PrimarySpan>\r\n                    </SpanColor>\r\n                  ) : (\r\n                    <SpanColor>\r\n                      State: <PrimarySpan>{stateArray[0]}</PrimarySpan>\r\n                    </SpanColor>\r\n                  )}\r\n                </Pragraph>\r\n                <Pragraph\r\n                  theme={{\r\n                    fontSizeSM: \"20px\",\r\n                    fontWeight: \"200\",\r\n                    top: \"20px\",\r\n                  }}\r\n                >\r\n                  {props.zipcode ? (\r\n                    <SpanColor>\r\n                      Zip Code: <PrimarySpan>{props.zipcode}</PrimarySpan>\r\n                    </SpanColor>\r\n                  ) : null}\r\n                </Pragraph>\r\n                <HRLine\r\n                  theme={{ marginTop: \"15px\", top: \"10px\", hrWidth: \"100%\" }}\r\n                ></HRLine>\r\n                <Pragraph\r\n                  theme={{\r\n                    fontSizeSM: \"20px\",\r\n                    fontWeight: \"200\",\r\n                    top: \"20px\",\r\n                  }}\r\n                >\r\n                  {props.feet && props.inches ? (\r\n                    <SpanColor>\r\n                      Height:{\" \"}\r\n                      <PrimarySpan>\r\n                        {props.feet}' {props.inches}\"\r\n                      </PrimarySpan>\r\n                    </SpanColor>\r\n                  ) : null}\r\n                </Pragraph>\r\n                <Pragraph\r\n                  theme={{\r\n                    fontSizeSM: \"20px\",\r\n                    fontWeight: \"200\",\r\n                    top: \"20px\",\r\n                  }}\r\n                >\r\n                  {props.number ? (\r\n                    <SpanColor>\r\n                      Phone Number: <PrimarySpan>{props.number}</PrimarySpan>\r\n                    </SpanColor>\r\n                  ) : null}\r\n                </Pragraph>\r\n                <Pragraph\r\n                  theme={{\r\n                    fontSizeSM: \"20px\",\r\n                    fontWeight: \"200\",\r\n                    top: \"20px\",\r\n                  }}\r\n                >\r\n                  {props.service ? (\r\n                    <SpanColor>\r\n                      Service: <PrimarySpan>{props.service}</PrimarySpan>\r\n                    </SpanColor>\r\n                  ) : (\r\n                    <SpanColor>\r\n                      Services: <PrimarySpan>{service.service}</PrimarySpan>\r\n                    </SpanColor>\r\n                  )}\r\n                </Pragraph>\r\n                <Pragraph\r\n                  theme={{\r\n                    fontSizeSM: \"20px\",\r\n                    fontWeight: \"200\",\r\n                    top: \"20px\",\r\n                  }}\r\n                >\r\n                  {props.budget ? (\r\n                    <SpanColor>\r\n                      Budget: <PrimarySpan>{props.budget}</PrimarySpan>\r\n                    </SpanColor>\r\n                  ) : (\r\n                    <SpanColor>\r\n                      Budget: <PrimarySpan>{budget.budget}</PrimarySpan>\r\n                    </SpanColor>\r\n                  )}\r\n                </Pragraph>\r\n              </DisplayFlexMiddle>\r\n              {props.address && props.city ? (\r\n                <GoogleMapContainer\r\n                  isActive={\"map-container\"}\r\n                  mapAddress={`${props.address} ${props.city}`}\r\n                />\r\n              ) : null}\r\n            </GridTwo>\r\n          </PreviewForm>\r\n        ) : null}\r\n      </ThemeProvider>\r\n    </Container>\r\n  );\r\n}\r\n","// Validator for last and first name\r\nexport const nameValidation = (nameType, name, setError) => {\r\n  const nameRegex = /^[a-zA-Z]+(([',. -][a-zA-Z ])?[a-zA-Z]*){0,39}$/;\r\n  switch (nameType) {\r\n    case nameType:\r\n      if (nameType.length === 0) {\r\n        setError(`${name} is required.`);\r\n      } else if (nameType.length >= 40 || !nameType.match(nameRegex)) {\r\n        setError(`${name} can only be up to 40 characters.`);\r\n      } else {\r\n        setError(\"\");\r\n      }\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n};\r\n\r\nexport const emailValidation = (nameType, setError) => {\r\n  const emailRegex =\r\n    /^([a-zA-Z0-9_\\-\\.]+)@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.)|(([a-zA-Z0-9\\-]+\\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\\]?)$/;\r\n  if (!nameType.match(emailRegex)) {\r\n    setError(\"Enter a valid email.\");\r\n  } else {\r\n    setError(\"\");\r\n  }\r\n};\r\n\r\nexport const termsValidation = (nameType, setError) => {\r\n  var isChecked = document.getElementById(\"agree\");\r\n  if (nameType && isChecked.checked === false) {\r\n    setError(\"You must agree to our terms by checking the box.\");\r\n  } else {\r\n    setError(\"\");\r\n  }\r\n};\r\n\r\nexport const addressValidations = (nameType, name, setError) => {\r\n  const addressRegex =\r\n    /^(\\d+) ?([A-Za-z](?= ))? (.*?) ([^ ]+?) ?((?<= )APT)? ?((?<= )\\d*)?$/;\r\n  const cityRegex = /^[a-zA-Z\\u0080-\\u024F\\s\\/\\-\\)\\(\\`\\.\\\"\\']+$/;\r\n  const zipRegex = /^\\d{5}$/;\r\n  switch (nameType) {\r\n    case nameType:\r\n      if (nameType.length === 0) {\r\n        setError(`${name} is required.`);\r\n      } else if (\r\n        name === \"Address\" &&\r\n        (nameType.length >= 40 || !nameType.match(addressRegex))\r\n      ) {\r\n        setError(`${name} can only be up to 40 alphanumeric characters.`);\r\n      } else if (\r\n        name === \"city\" &&\r\n        (nameType.length >= 40 || !nameType.match(cityRegex))\r\n      ) {\r\n        setError(`Invalid ${name}.`);\r\n      } else if (name === \"zip code\" && !nameType.match(zipRegex)) {\r\n        setError(`Invalid ${name}`);\r\n      } else {\r\n        setError(\"\");\r\n      }\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n};\r\n\r\nexport const heightValidation = (nameType, name, setError) => {\r\n  const nonNegNumRegex = /^[0-9]+$/;\r\n  switch (nameType) {\r\n    case nameType:\r\n      if (nameType.length === 0) {\r\n        setError(`${name} is required.`);\r\n      } else if (!nameType.match(nonNegNumRegex)) {\r\n        setError(`Invalid ${name}. `);\r\n      } else {\r\n        setError(\"\");\r\n      }\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n};\r\n\r\nexport const PhoneNumberValidation = (nameType, name, setError) => {\r\n  switch (nameType) {\r\n    case nameType:\r\n      if (nameType.length < 10) {\r\n        setError(`Enter a 10 digit ${name}`);\r\n      } else if (nameType.length >= 10) {\r\n        setError(\"\");\r\n      }\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n};\r\n","export const setUserFirstName = (firstName) => {\r\n  return { type: \"SET_USER_FIRST_NAME\", firstName };\r\n};\r\n\r\nexport const setUserLastName = (lastName) => {\r\n  return { type: \"SET_USER_LAST_NAME\", lastName };\r\n};\r\n\r\nexport const setUserEmail = (email) => {\r\n  return { type: \"SET_USER_EMAIL\", email };\r\n};\r\n\r\nexport const setUserTitle = (title) => {\r\n  return { type: \"SET_USER_TITLE\", title };\r\n};\r\n\r\nexport const setUserHeight = (feet, inches) => {\r\n  return { type: \"SET_USER_HEIGHT\", feet, inches };\r\n};\r\n\r\nexport const setUserCountry = (country) => {\r\n  return { type: \"SET_USER_COUNTRY\", country };\r\n};\r\n\r\nexport const setUserStates = (states) => {\r\n  return { type: \"SET_USER_STATES\", states };\r\n};\r\n\r\nexport const setUserCity = (city) => {\r\n  return { type: \"SET_USER_CITY\", city };\r\n};\r\n\r\nexport const setUserPhoneNumber = (phoneNumber) => {\r\n  return { type: \"SET_USER_PHONE_NUMBER\", phoneNumber };\r\n};\r\n\r\nexport const setUserServices = (services) => {\r\n  return { type: \"SET_USER_SERVICES\", services };\r\n};\r\n\r\nexport const setUserBudget = (budget) => {\r\n  return { type: \"SET_USER_BUDGET\", budget };\r\n};\r\n\r\nexport const setUserAddress = (address) => {\r\n  return { type: \"SET_USER_ADDRESS\", address };\r\n};\r\n\r\nexport const setUserZipCode = (zipcode) => {\r\n  return { type: \"SET_USER_ZIPCODE\", zipcode };\r\n};\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useState, useEffect, useRef } from \"react\";\r\nimport FormLogic from \"../../components/form/FormLogic\";\r\nimport FormPreview from \"../../components/form/FormPreview\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { SmallCard } from \"../../styled-components/globalStyled\";\r\nimport { StyledModal, StyledCloseModal } from \"../../styled-components/styled\";\r\nimport {\r\n  titleOptions,\r\n  servicesOptions,\r\n  budgetsOptions,\r\n} from \"../../components/form/data/selects\";\r\n\r\nimport { countries } from \"../../components/form/data/countries\";\r\nimport { stateArray } from \"../../components/form/data/states\";\r\nimport {\r\n  nameValidation,\r\n  emailValidation,\r\n  termsValidation,\r\n  addressValidations,\r\n  heightValidation,\r\n  PhoneNumberValidation,\r\n} from \"../../components/form/formValidation/FormValidation\";\r\n\r\nimport {\r\n  setUserFirstName,\r\n  setUserLastName,\r\n  setUserTitle,\r\n  setUserEmail,\r\n  setUserCountry,\r\n  setUserStates,\r\n  setUserCity,\r\n  setUserPhoneNumber,\r\n  setUserServices,\r\n  setUserBudget,\r\n  setUserAddress,\r\n  setUserZipCode,\r\n  setUserHeight,\r\n} from \"../../redux/actions/formActions\";\r\nexport default function FormData() {\r\n  // Redux dispatch\r\n  const dispatch = useDispatch();\r\n  // Email\r\n  const [email, setEmail] = useState(\"\");\r\n  // Names\r\n  const [lastName, setLastName] = useState(\"\");\r\n  const [firstName, setFirstName] = useState(\"\");\r\n  // Number\r\n  const [number, setNumber] = useState(\"\");\r\n  // title\r\n  const [title, setTitle] = useState(\"\");\r\n  // country/region\r\n  const [country, setCountry] = useState(\"\");\r\n  // state\r\n  const [state, setState] = useState(\"\");\r\n  // Street Address\r\n  const [address, setAddress] = useState(\"\");\r\n  // city\r\n  const [city, setCity] = useState(\"\");\r\n  // Zip Code\r\n  const [zipCode, setZipCode] = useState(\"\");\r\n  // terms\r\n  const [terms, setTerms] = useState(false);\r\n  // servicesOptions\r\n  const [service, setService] = useState();\r\n  // budget\r\n  const [budget, setBudget] = useState();\r\n  // Height\r\n  const [feet, setFeet] = useState(\"\");\r\n  const [inches, setInches] = useState(\"\");\r\n  // Errors\r\n  const [firstNameError, setFirstNameError] = useState();\r\n  const [lastNameError, setLastNameError] = useState();\r\n  const [emailError, setEmailError] = useState();\r\n  const [termsError, setTermsError] = useState();\r\n  const [addressError, setAddressError] = useState();\r\n  const [cityError, setCityError] = useState();\r\n  const [zipCodeError, setZipCodeError] = useState();\r\n  const [feetError, setFeetError] = useState();\r\n  const [inchesError, setInchesError] = useState();\r\n  const [numberError, setNumberError] = useState();\r\n  // Required fields array checker\r\n  const dataArray = {\r\n    title,\r\n    firstName,\r\n    lastName,\r\n    email,\r\n    country,\r\n    state,\r\n    address,\r\n    city,\r\n    zipCode,\r\n    terms,\r\n  };\r\n  const firstRender = useRef(true);\r\n\r\n  useEffect(() => {\r\n    if (firstRender.current) {\r\n      firstRender.current = false;\r\n      return;\r\n    }\r\n    console.log(dataArray);\r\n    firstName && nameValidation(firstName, \"First name\", setFirstNameError);\r\n    lastName && nameValidation(lastName, \"Last name\", setLastNameError);\r\n    email && emailValidation(email, setEmailError);\r\n    terms && termsValidation(terms, setTermsError);\r\n    address && addressValidations(address, \"Address\", setAddressError);\r\n    city && addressValidations(city, \"city\", setCityError);\r\n    zipCode && addressValidations(zipCode, \"zip code\", setZipCodeError);\r\n    feet && heightValidation(feet, \"Feet\", setFeetError);\r\n    inches && heightValidation(inches, \"Inches\", setInchesError);\r\n    number && PhoneNumberValidation(number, \"phone number\", setNumberError);\r\n  }, [\r\n    lastName,\r\n    firstName,\r\n    email,\r\n    terms,\r\n    country,\r\n    stateArray,\r\n    address,\r\n    city,\r\n    zipCode,\r\n    feet,\r\n    inches,\r\n    number,\r\n  ]);\r\n\r\n  const handleFormSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch(setUserFirstName(firstName));\r\n    dispatch(setUserLastName(lastName));\r\n    dispatch(setUserEmail(email));\r\n    dispatch(setUserCity(city));\r\n    dispatch(setUserAddress(address));\r\n    dispatch(setUserZipCode(zipCode));\r\n    dispatch(setUserHeight(feet, inches));\r\n    dispatch(setUserPhoneNumber(number));\r\n\r\n    // servicesOptions\r\n    if (!service) {\r\n      dispatch(setUserServices(\"E-mail\"));\r\n      setService(\"E-mail\");\r\n    } else {\r\n      dispatch(setUserServices(service));\r\n    }\r\n\r\n    // budget\r\n    if (!budget) {\r\n      dispatch(setUserBudget(\"< $50\"));\r\n      setBudget(\"< $50\");\r\n    } else {\r\n      dispatch(setUserBudget(budget));\r\n    }\r\n\r\n    // title\r\n    if (!title) {\r\n      dispatch(setUserTitle(\"None\"));\r\n      setTitle(\"None\");\r\n    } else {\r\n      dispatch(setUserTitle(title));\r\n    }\r\n\r\n    // country\r\n    if (!country) {\r\n      dispatch(setUserCountry(\"Afghanistan\"));\r\n      setCountry(\"Afghanistan\");\r\n    } else {\r\n      dispatch(setUserCountry(country));\r\n    }\r\n    // state\r\n    if (!state) {\r\n      dispatch(setUserStates(\"AL\"));\r\n      setState(\"AL\");\r\n    } else {\r\n      dispatch(setUserStates(state));\r\n    }\r\n\r\n    console.log(\r\n      firstName,\r\n      lastName,\r\n      title,\r\n      email,\r\n      country,\r\n      state,\r\n      address,\r\n      zipCode\r\n    );\r\n  };\r\n  // Form Preview Mode START\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n  const [opacity, setOpacity] = useState(0);\r\n\r\n  function openModal(e) {\r\n    e.preventDefault();\r\n    setOpacity(0);\r\n    setModalOpen(!modalOpen);\r\n  }\r\n\r\n  const afterOpen = () => {\r\n    setTimeout(() => {\r\n      setOpacity(1);\r\n    }, 100);\r\n  };\r\n\r\n  const beforeClose = () => {\r\n    return new Promise((resolve) => {\r\n      setOpacity(0);\r\n      setTimeout(resolve, 200);\r\n    });\r\n  };\r\n\r\n  // Form Preview Mode END\r\n\r\n  return (\r\n    <FormLogic\r\n      dataArray={dataArray}\r\n      titleOptions={titleOptions}\r\n      handleFormSubmit={handleFormSubmit}\r\n      firstName={firstName}\r\n      firstNameError={firstNameError}\r\n      lastNameError={lastNameError}\r\n      emailError={emailError}\r\n      setEmailError={setEmailError}\r\n      setFirstName={setFirstName}\r\n      setTerms={setTerms}\r\n      terms={terms}\r\n      termsError={termsError}\r\n      title={title}\r\n      setTitle={setTitle}\r\n      lastName={lastName}\r\n      setLastName={setLastName}\r\n      email={email}\r\n      setEmail={setEmail}\r\n      beforeClose={beforeClose}\r\n      afterOpen={afterOpen}\r\n      openModal={openModal}\r\n      opacity={opacity}\r\n      modalOpen={modalOpen}\r\n      StyledCloseModal={StyledCloseModal}\r\n      StyledModal={StyledModal}\r\n      SmallCard={SmallCard}\r\n      FormPreview={FormPreview}\r\n      countries={countries}\r\n      country={country}\r\n      setCountry={setCountry}\r\n      stateArray={stateArray}\r\n      state={state}\r\n      setState={setState}\r\n      address={address}\r\n      setAddress={setAddress}\r\n      addressError={addressError}\r\n      city={city}\r\n      setCity={setCity}\r\n      cityError={cityError}\r\n      setCityError={setCityError}\r\n      zipCode={zipCode}\r\n      setZipCode={setZipCode}\r\n      zipCodeError={zipCodeError}\r\n      feetError={feetError}\r\n      inchesError={inchesError}\r\n      setFeet={setFeet}\r\n      setInches={setInches}\r\n      feet={feet}\r\n      inches={inches}\r\n      number={number}\r\n      setNumber={setNumber}\r\n      numberError={numberError}\r\n      servicesOptions={servicesOptions}\r\n      service={service}\r\n      setService={setService}\r\n      budgetsOptions={budgetsOptions}\r\n      budget={budget}\r\n      setBudget={setBudget}\r\n    />\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport {\r\n  Container,\r\n  DisplayFlexMiddle,\r\n  CardSpacer,\r\n  ResultCard,\r\n  theme,\r\n  H1,\r\n  H2,\r\n  Pragraph,\r\n  SpanColor,\r\n  HRLine,\r\n  PrimarySpan,\r\n  GridTwo,\r\n} from \"../../styled-components/globalStyled\";\r\nimport { ResultVerification } from \"../../styled-components/styled\";\r\nimport { ThemeProvider } from \"styled-components\";\r\nimport { countries } from \"../../components/form/data/countries\";\r\nimport { stateArray } from \"../../components/form/data/states\";\r\nimport { formInputCheck } from \"../../components/form/algorithms/FormAlgorithm\";\r\nimport {\r\n  budgetsOptions,\r\n  servicesOptions,\r\n} from \"../../components/form/data/selects\";\r\nimport GoogleMapContainer from \"../../components/map/GoogleMapContainer\";\r\n\r\nexport default function FormResult({ isActive }) {\r\n  const { form } = useSelector((state) => ({ ...state }));\r\n  const {\r\n    firstName,\r\n    lastName,\r\n    title,\r\n    height,\r\n    phoneNumber,\r\n    email,\r\n    country,\r\n    states,\r\n    city,\r\n    services,\r\n    budget,\r\n    address,\r\n    zipcode,\r\n  } = form;\r\n  var selectorCheck = [\r\n    firstName,\r\n    lastName,\r\n    title,\r\n    height,\r\n    phoneNumber,\r\n    email,\r\n    country,\r\n    states,\r\n    city,\r\n    services,\r\n    budget,\r\n    address,\r\n    zipcode,\r\n  ];\r\n  // if serevice/budget is null use first ele\r\n  const expenses = budgetsOptions[0];\r\n  const service = servicesOptions[0];\r\n\r\n  return (\r\n    <ResultVerification className='result'>\r\n      <Container>\r\n        <ThemeProvider theme={theme}>\r\n          {formInputCheck(selectorCheck) ? (\r\n            <>\r\n              <DisplayFlexMiddle\r\n                theme={{\r\n                  height: \"100px\",\r\n                  alignItems: \"center\",\r\n                  flexDirection: \"column\",\r\n                  justifyContentCenter: \"center\",\r\n                }}\r\n              >\r\n                <H1\r\n                  theme={{\r\n                    grayColor: \"var(--primary-color)\",\r\n                    fontSizeSM: \"25px\",\r\n                  }}\r\n                >\r\n                  Results Verification Page Denny Feng\r\n                </H1>\r\n              </DisplayFlexMiddle>\r\n              <DisplayFlexMiddle>\r\n                <ResultCard theme={{ maxWidth: \"60%\", height: \"400px\" }}>\r\n                  <GridTwo\r\n                    theme={{ gridGap: \"0px\", gridPadding: \"25px 0 0 19px\" }}\r\n                  >\r\n                    <DisplayFlexMiddle\r\n                      theme={{\r\n                        alignItems: \"flex-start\",\r\n                        flexDirection: \"column\",\r\n                        justifyContentCenter: \"center\",\r\n                      }}\r\n                    >\r\n                      <H2\r\n                        center\r\n                        theme={{\r\n                          grayColor: \"var(--primary-color)\",\r\n                          maxWidth: \"200px\",\r\n                          fontWeight: \"200\",\r\n                          alignCenter: \"center\",\r\n                        }}\r\n                      >\r\n                        {lastName || firstName ? (\r\n                          <div> {lastName + \" \" + firstName}</div>\r\n                        ) : null}\r\n                      </H2>\r\n\r\n                      <Pragraph\r\n                        theme={{\r\n                          fontSizeSM: \"20px\",\r\n                          fontWeight: \"200\",\r\n                          top: \"5px\",\r\n                        }}\r\n                      >\r\n                        {title ? (\r\n                          <SpanColor>\r\n                            Preferred Title: <PrimarySpan> {title}</PrimarySpan>\r\n                          </SpanColor>\r\n                        ) : (\r\n                          <SpanColor>\r\n                            Preferred Title: <PrimarySpan> None</PrimarySpan>\r\n                          </SpanColor>\r\n                        )}\r\n                      </Pragraph>\r\n                      <Pragraph\r\n                        theme={{\r\n                          fontSizeSM: \"20px\",\r\n                          fontWeight: \"200\",\r\n                          top: \"5px\",\r\n                        }}\r\n                      >\r\n                        {email ? (\r\n                          <SpanColor>\r\n                            Email: <PrimarySpan> {email}</PrimarySpan>\r\n                          </SpanColor>\r\n                        ) : null}\r\n                      </Pragraph>\r\n                      <HRLine\r\n                        theme={{\r\n                          marginTop: \"10px\",\r\n                          top: \"10px\",\r\n                          hrWidth: \"70%\",\r\n                        }}\r\n                      ></HRLine>\r\n                      <Pragraph\r\n                        theme={{\r\n                          fontSizeSM: \"20px\",\r\n                          fontWeight: \"200\",\r\n                          top: \"20px\",\r\n                        }}\r\n                      >\r\n                        {country ? (\r\n                          <SpanColor>\r\n                            Country/Region: <PrimarySpan>{country}</PrimarySpan>\r\n                          </SpanColor>\r\n                        ) : (\r\n                          <SpanColor>\r\n                            Country/Region:\r\n                            <PrimarySpan>{countries[0]}</PrimarySpan>\r\n                          </SpanColor>\r\n                        )}\r\n                      </Pragraph>\r\n                      <Pragraph\r\n                        theme={{\r\n                          fontSizeSM: \"20px\",\r\n                          fontWeight: \"200\",\r\n                          top: \"20px\",\r\n                        }}\r\n                      >\r\n                        {address ? (\r\n                          <SpanColor>\r\n                            Address: <PrimarySpan>{address}</PrimarySpan>\r\n                          </SpanColor>\r\n                        ) : null}\r\n                      </Pragraph>\r\n                      <Pragraph\r\n                        theme={{\r\n                          fontSizeSM: \"20px\",\r\n                          fontWeight: \"200\",\r\n                          top: \"20px\",\r\n                        }}\r\n                      >\r\n                        {city ? (\r\n                          <SpanColor>\r\n                            City: <PrimarySpan>{city}</PrimarySpan>\r\n                          </SpanColor>\r\n                        ) : null}\r\n                      </Pragraph>\r\n                      <Pragraph\r\n                        theme={{\r\n                          fontSizeSM: \"20px\",\r\n                          fontWeight: \"200\",\r\n                          top: \"20px\",\r\n                        }}\r\n                      >\r\n                        {states ? (\r\n                          <SpanColor>\r\n                            State: <PrimarySpan>{states}</PrimarySpan>\r\n                          </SpanColor>\r\n                        ) : (\r\n                          <SpanColor>\r\n                            State: <PrimarySpan>{stateArray[0]}</PrimarySpan>\r\n                          </SpanColor>\r\n                        )}\r\n                      </Pragraph>\r\n                      <Pragraph\r\n                        theme={{\r\n                          fontSizeSM: \"20px\",\r\n                          fontWeight: \"200\",\r\n                          top: \"20px\",\r\n                        }}\r\n                      >\r\n                        {zipcode ? (\r\n                          <SpanColor>\r\n                            Zip Code: <PrimarySpan>{zipcode}</PrimarySpan>\r\n                          </SpanColor>\r\n                        ) : null}\r\n                      </Pragraph>\r\n                      <HRLine\r\n                        theme={{\r\n                          marginTop: \"15px\",\r\n                          top: \"10px\",\r\n                          hrWidth: \"70%\",\r\n                        }}\r\n                      ></HRLine>\r\n                      <Pragraph\r\n                        theme={{\r\n                          fontSizeSM: \"20px\",\r\n                          fontWeight: \"200\",\r\n                          top: \"20px\",\r\n                        }}\r\n                      >\r\n                        {height ? (\r\n                          <SpanColor>\r\n                            Height:{\" \"}\r\n                            <PrimarySpan>\r\n                              {height[0].feet}' {height[0].inches}\"\r\n                            </PrimarySpan>\r\n                          </SpanColor>\r\n                        ) : null}\r\n                      </Pragraph>\r\n                      <Pragraph\r\n                        theme={{\r\n                          fontSizeSM: \"20px\",\r\n                          fontWeight: \"200\",\r\n                          top: \"20px\",\r\n                        }}\r\n                      >\r\n                        {phoneNumber ? (\r\n                          <SpanColor>\r\n                            Phone Number:{\" \"}\r\n                            <PrimarySpan>{phoneNumber}</PrimarySpan>\r\n                          </SpanColor>\r\n                        ) : null}\r\n                      </Pragraph>\r\n                      <Pragraph\r\n                        theme={{\r\n                          fontSizeSM: \"20px\",\r\n                          fontWeight: \"200\",\r\n                          top: \"20px\",\r\n                        }}\r\n                      >\r\n                        {services ? (\r\n                          <SpanColor>\r\n                            Service: <PrimarySpan>{services}</PrimarySpan>\r\n                          </SpanColor>\r\n                        ) : (\r\n                          <SpanColor>\r\n                            Service:{\" \"}\r\n                            <PrimarySpan>{service.service}</PrimarySpan>\r\n                          </SpanColor>\r\n                        )}\r\n                      </Pragraph>\r\n                      <Pragraph\r\n                        theme={{\r\n                          fontSizeSM: \"20px\",\r\n                          fontWeight: \"200\",\r\n                          top: \"20px\",\r\n                        }}\r\n                      >\r\n                        {budget ? (\r\n                          <SpanColor>\r\n                            Budget: <PrimarySpan>{budget}</PrimarySpan>\r\n                          </SpanColor>\r\n                        ) : (\r\n                          <SpanColor>\r\n                            Budget: <PrimarySpan>{expenses.budget}</PrimarySpan>\r\n                          </SpanColor>\r\n                        )}\r\n                      </Pragraph>\r\n                    </DisplayFlexMiddle>\r\n                    {address && city ? (\r\n                      <GoogleMapContainer\r\n                        isActive={\"result-map-container\"}\r\n                        mapAddress={`${address} ${city}`}\r\n                      />\r\n                    ) : null}\r\n                  </GridTwo>\r\n                </ResultCard>\r\n              </DisplayFlexMiddle>\r\n            </>\r\n          ) : null}\r\n        </ThemeProvider>\r\n      </Container>\r\n    </ResultVerification>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport {\r\n  Container,\r\n  DisplayFlexMiddle,\r\n  theme,\r\n  Navigate,\r\n  GridTwo,\r\n} from \"../../styled-components/globalStyled\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { ThemeProvider } from \"styled-components\";\r\nimport { FooterContainer } from \"../../styled-components/styled\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faGithub, faLinkedin } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\r\nlibrary.add(faGithub, faLinkedin);\r\n\r\nexport default function Footer() {\r\n  const history = useHistory();\r\n  return (\r\n    <FooterContainer>\r\n      <Container>\r\n        <ThemeProvider theme={theme}>\r\n          <DisplayFlexMiddle\r\n            theme={{\r\n              height: \"100px\",\r\n              alignItems: \"center\",\r\n              flexDirection: \"row\",\r\n              justifyContentCenter: \"center\",\r\n            }}\r\n          >\r\n            <Navigate href='https://github.com/FengDenny'>\r\n              <FontAwesomeIcon icon={faGithub} />\r\n            </Navigate>\r\n            <Navigate href='https://www.linkedin.com/in/denny-feng/'>\r\n              <FontAwesomeIcon icon={faLinkedin} />\r\n            </Navigate>\r\n          </DisplayFlexMiddle>\r\n        </ThemeProvider>\r\n      </Container>\r\n    </FooterContainer>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport {\r\n  Container,\r\n  DisplayFlexMiddle,\r\n  theme,\r\n  Pragraph,\r\n} from \"../styled-components/globalStyled\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { ThemeProvider } from \"styled-components\";\r\nimport { BannerContainer } from \"../styled-components/styled\";\r\n\r\nexport default function Banner() {\r\n  return (\r\n    <BannerContainer>\r\n      <Container>\r\n        <ThemeProvider theme={theme}>\r\n          <DisplayFlexMiddle\r\n            theme={{\r\n              height: \"50px\",\r\n              alignItems: \"center\",\r\n              flexDirection: \"row\",\r\n              justifyContentCenter: \"center\",\r\n            }}\r\n          >\r\n            <Pragraph\r\n              theme={{\r\n                lineHeight: \"30px\",\r\n                fontSizeSM: \"20px\",\r\n                maxWidth: \"700px\",\r\n                grayColor: \"#fff\",\r\n                fontWeight: \"200\",\r\n              }}\r\n            >\r\n              CSC 642 848 Fall 2021 Individual Assignment Denny Feng Data Survey\r\n              Form\r\n            </Pragraph>\r\n          </DisplayFlexMiddle>\r\n        </ThemeProvider>\r\n      </Container>\r\n    </BannerContainer>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport {\r\n  Container,\r\n  DisplayFlexMiddle,\r\n  theme,\r\n  Span,\r\n  Header,\r\n  Pragraph,\r\n  Main,\r\n} from \"../styled-components/globalStyled\";\r\nimport { ThemeProvider } from \"styled-components\";\r\nimport { Hero, HeroLogo, HeroCard } from \"../styled-components/styled\";\r\nimport FormData from \"./form/FormData\";\r\nimport FormResult from \"./form/FormResult\";\r\nimport Footer from \"../utility/Footer/Footer\";\r\nimport Banner from \"../utility/Banner\";\r\nimport { formInputCheck } from \"../components/form/algorithms/FormAlgorithm\";\r\n\r\nexport default function HeroSection() {\r\n  const { form } = useSelector((state) => ({ ...state }));\r\n\r\n  const {\r\n    firstName,\r\n    lastName,\r\n    title,\r\n    height,\r\n    phoneNumber,\r\n    email,\r\n    country,\r\n    states,\r\n    city,\r\n    services,\r\n    budget,\r\n    address,\r\n    zipcode,\r\n  } = form;\r\n\r\n  return (\r\n    <>\r\n      <Main>\r\n        <Banner />\r\n        <Hero>\r\n          <Container>\r\n            <ThemeProvider theme={theme}>\r\n              <DisplayFlexMiddle evenly>\r\n                <Header>\r\n                  <HeroLogo>\r\n                    Data<Span>Survey.</Span>\r\n                  </HeroLogo>\r\n                  <Pragraph\r\n                    theme={{\r\n                      lineHeight: \"30px\",\r\n                      fontSizeSM: \"20px\",\r\n                      maxWidth: \"450px\",\r\n                      grayColor: \"var(--light-gray-color)\",\r\n                      fontWeight: \"200\",\r\n                    }}\r\n                  >\r\n                    The goal of this project is to create a form that is easy\r\n                    and simple to use. One core feature is the ability to\r\n                    preview form before submission. After submitting, just\r\n                    scroll down to see the form results. It's that simple!\r\n                  </Pragraph>\r\n                </Header>\r\n                <HeroCard>\r\n                  <FormData />\r\n                </HeroCard>\r\n              </DisplayFlexMiddle>\r\n            </ThemeProvider>\r\n          </Container>\r\n        </Hero>\r\n        {!firstName ||\r\n        !lastName ||\r\n        !email ||\r\n        !city ||\r\n        !zipcode ||\r\n        !address ||\r\n        !city ? null : (\r\n          <>\r\n            <FormResult />\r\n            <Footer />\r\n          </>\r\n        )}\r\n      </Main>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Hero from \"../pages/HeroSection\";\r\n\r\nexport default function Home() {\r\n  return (\r\n    <>\r\n      <Hero />\r\n    </>\r\n  );\r\n}\r\n","import { Fragment } from \"react\";\n// need to use hashrouter for ghpages deployment\nimport { HashRouter as Router, Route } from \"react-router-dom\";\nimport { GlobalStyles } from \"./styled-components/globalStyled\";\nimport { ModalProvider } from \"styled-react-modal\";\nimport { FadingBackground } from \"./styled-components/styled\";\nimport Home from \"./pages/Home\";\nimport \"./map.css\";\nfunction App() {\n  return (\n    <ModalProvider backgroundComponent={FadingBackground}>\n      <GlobalStyles />\n      <Router basename={process.env.PUBLIC_URL}>\n        <Route exact path='/' component={Home} />\n      </Router>\n    </ModalProvider>\n  );\n}\n\nexport default App;\n","const INITIAL_STATE = {\r\n  firstName: \"\",\r\n  lastName: \"\",\r\n  title: \"\",\r\n  height: [{ feet: \"\", inches: \"\" }],\r\n  phoneNumber: \"\",\r\n  email: \"\",\r\n  country: \"\",\r\n  states: \"\",\r\n  city: \"\",\r\n  services: \"\",\r\n  budget: \"\",\r\n  address: \"\",\r\n  zipcode: \"\",\r\n};\r\n\r\nconst formReducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case \"SET_USER_FIRST_NAME\":\r\n      return { ...state, firstName: action.firstName };\r\n    case \"SET_USER_LAST_NAME\":\r\n      return { ...state, lastName: action.lastName };\r\n    case \"SET_USER_TITLE\":\r\n      return { ...state, title: action.title };\r\n    case \"SET_USER_HEIGHT\":\r\n      return {\r\n        ...state,\r\n        height: [{ feet: action.feet, inches: action.inches }],\r\n      };\r\n    case \"SET_USER_PHONE_NUMBER\":\r\n      return { ...state, phoneNumber: action.phoneNumber };\r\n    case \"SET_USER_EMAIL\":\r\n      return { ...state, email: action.email };\r\n    case \"SET_USER_COUNTRY\":\r\n      return { ...state, country: action.country };\r\n    case \"SET_USER_STATES\":\r\n      return { ...state, states: action.states };\r\n    case \"SET_USER_CITY\":\r\n      return { ...state, city: action.city };\r\n    case \"SET_USER_SERVICES\":\r\n      return { ...state, services: action.services };\r\n    case \"SET_USER_BUDGET\":\r\n      return { ...state, budget: action.budget };\r\n    case \"SET_USER_ADDRESS\":\r\n      return { ...state, address: action.address };\r\n    case \"SET_USER_ZIPCODE\":\r\n      return { ...state, zipcode: action.zipcode };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default formReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport formReducer from \"./formReducer\";\r\n\r\nexport default combineReducers({\r\n  form: formReducer,\r\n});\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\nimport { HashRouter as Router } from \"react-router-dom\";\n// redux\nimport { createStore, applyMiddleware } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport rootReducer from \"./redux/reducers/rootReducer\";\nimport thunk from \"redux-thunk\";\n\n// redux-persist\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\"; // defaults to localStorage for web\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport autoMergeLevel2 from \"redux-persist/lib/stateReconciler/autoMergeLevel2\";\n\nconst persistConfig = {\n  key: \"root\",\n  storage,\n  stateReconciler: autoMergeLevel2,\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nconst store = composeWithDevTools(applyMiddleware(thunk))(createStore)(\n  persistedReducer\n);\n\nconst persistor = persistStore(store);\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <Router basename={process.env.PUBLIC_URL}>\n        <App />\n      </Router>\n    </PersistGate>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}