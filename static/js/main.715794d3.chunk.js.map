{"version":3,"sources":["styled-components/globalStyled.js","styled-components/styled.js","components/form/algorithms/FormAlgorithm.js","components/form/formValidation/FormCaptcha.js","components/form/FormLogic.js","components/form/data/countries.js","components/form/data/states.js","components/form/data/selects.js","components/form/FormPreview.js","components/form/formValidation/FormValidation.js","redux/actions/formActions.js","pages/form/FormData.js","pages/HeroSection.js","pages/Home.js","App.js","redux/reducers/formReducer.js","redux/reducers/rootReducer.js","index.js"],"names":["GlobalStyles","createGlobalStyle","theme","justifyContentCenter","justifyContentEvenly","alignItems","flexDirection","fontSizeSM","fontSizeMD","fontSizeLG","height","maxWidth","formItemHeight","grayColor","color","fontWeight","alignCenter","alignStart","top","marginTop","marginLeft","marginTopInput","errorLabelWidth","left","h1Top","labelTop","gridPadding","Container","styled","div","DisplayFlexMiddle","props","evenly","H1","h1","center","h1top","H2","h2","Pragraph","p","Header","header","Span","span","SpanColor","AsteriskSpan","PrimarySpan","Card","SmallCard","CardSpacer","GridTwo","HRLine","hr","Hero","HeroLogo","HeroCard","FormGroup","form","FormLabel","label","FormInput","input","FormSelect","select","SelectOptions","option","FormButton","button","FormSubmission","PreviewForm","StyledModal","Modal","opacity","StyledCloseModal","FadingBackground","BaseModalBackground","formInputCheck","data","x","FormCaptcha","setVerified","useState","load","setLoading","key","reCaptchaRef","createRef","useEffect","setTimeout","style","ref","onChange","sitekey","FormLogic","number","setNumber","numberError","lastName","setLastName","firstName","setFirstName","email","setEmail","titleOptions","handleFormSubmit","title","setTitle","openModal","afterOpen","beforeClose","FormPreview","modalOpen","dataArray","firstNameError","lastNameError","emailError","termsError","setTerms","terms","countries","country","setCountry","states","state","setState","address","setAddress","addressError","city","setCity","cityError","zipCode","setZipCode","zipCodeError","feetError","inchesError","setFeet","setInches","feet","inches","services","service","setService","budgets","budget","setBudget","firstRender","useRef","verified","formatPhoneRef","current","onSubmit","htmlForm","type","id","name","placeholder","maxLength","value","e","target","required","map","options","index","numbers","replace","char","i","length","formatPhoneNumber","onClick","isOpen","onBackgroundClick","backgroundProps","last","first","zipcode","htmlFor","to","disabled","dotenv","config","path","propsCheck","nameValidation","nameType","setError","match","addressValidations","heightValidation","setUserTitle","setUserCountry","setUserStates","setUserServices","setUserBudget","FormData","dispatch","useDispatch","setFirstNameError","setLastNameError","setEmailError","setTermsError","setAddressError","setCityError","setZipCodeError","setFeetError","setInchesError","setNumberError","console","log","isChecked","document","getElementById","checked","termsValidation","PhoneNumberValidation","setModalOpen","setOpacity","preventDefault","setUserFirstName","setUserLastName","setUserEmail","setUserCity","setUserAddress","setUserHeight","phoneNumber","Promise","resolve","HeroSection","useSelector","Home","App","backgroundComponent","basename","process","exact","component","INITIAL_STATE","formReducer","action","combineReducers","persistConfig","storage","stateReconciler","autoMergeLevel2","persistedReducer","persistReducer","rootReducer","store","composeWithDevTools","applyMiddleware","thunk","createStore","persistor","persistStore","ReactDOM","render","loading"],"mappings":"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GACTG,OAAQA,GACRhB,KAAMA,UAIV,KACJ,eAAC/E,GAAD,IAEA,eAACF,EAAD,UACE,eAACS,GAAD,UACE,gBAACY,GAAD,WACE,gBAACV,GAAD,CACEwH,QAAQ,QACRjL,MAAO,CACLK,WAAY,OACZO,MAAO,4BAJX,4CAOkC,GAChC,eAAC,IAAD,CAASsK,GAAG,IAAI1F,MAAO,CAAE5E,MAAO,wBAAhC,mBAGA,eAACgC,EAAD,oBAEF,eAACe,GAAD,CACE6F,KAAK,WACLC,GAAG,QACHC,KAAK,SACLG,MAAOxC,EACP3B,SAAU,kBAAM0B,GAAS,IACzBpH,MAAO,CAAES,SAAU,OAAQC,eAAgB,WAE3C2G,GACA,eAAC5D,GAAD,CACEzD,MAAO,CACLY,MAAO,eACPP,WAAY,QAHhB,8DASF,eAAC,GAAD,CAAW0E,YAAaA,KACtBoE,GASE,KARF,eAAC1F,GAAD,CACEzD,MAAO,CACLK,WAAY,OACZO,MAAO,iBAHX,kDASF,eAACqD,GAAD,CACEuF,KAAK,SACL2B,UACG/E,IACAF,IACAF,IACAkC,IACAN,IACAP,IACAxB,IACA4C,KACAC,KACAS,GAEHnJ,MAAO,CAAES,SAAU,QAASC,eAAgB,WAd9C,gCDznBd0K,KAAOC,OAAO,CAAEC,KAAM,uBEHf,IAAMhE,GAAY,CACvB,cACA,UACA,UACA,UACA,SACA,WACA,wBACA,YACA,UACA,QACA,YACA,UACA,aACA,UACA,UACA,aACA,WACA,UACA,UACA,SACA,QACA,UACA,SACA,UACA,2BACA,WACA,SACA,yBACA,SACA,WACA,eACA,UACA,WACA,WACA,SACA,aACA,iBACA,OACA,QACA,QACA,WACA,QACA,eACA,aACA,gBACA,UACA,cACA,OACA,SACA,iBACA,UACA,WACA,WACA,qBACA,UACA,QACA,cACA,oBACA,UACA,WACA,mBACA,gBACA,OACA,UACA,SACA,mBACA,qBACA,QACA,SACA,UACA,UACA,QACA,YACA,SACA,YACA,UACA,OACA,YACA,WACA,SACA,gBACA,SACA,QACA,WACA,YACA,UACA,UACA,QACA,YACA,OACA,OACA,UACA,cACA,SACA,QACA,UACA,QACA,SACA,SACA,aACA,QACA,SACA,kBACA,OACA,SACA,UACA,UACA,UACA,QACA,gBACA,YACA,aACA,QACA,YACA,aACA,SACA,WACA,WACA,OACA,QACA,aACA,YACA,SACA,UACA,SACA,WACA,aACA,aACA,UACA,aACA,UACA,QACA,cACA,uBACA,gBACA,cACA,YACA,QACA,UACA,SACA,OACA,WACA,YACA,SACA,mBACA,WACA,OACA,cACA,SACA,WACA,cACA,QACA,UACA,UACA,SACA,SACA,8BACA,QACA,aACA,YACA,eACA,UACA,SACA,aACA,eACA,YACA,WACA,WACA,eACA,cACA,QACA,YACA,uBACA,WACA,aACA,YACA,QACA,WACA,YACA,SACA,cACA,QACA,SACA,aACA,WACA,WACA,eACA,OACA,QACA,wBACA,UACA,SACA,eACA,qBACA,SACA,UACA,uBACA,iBACA,gBACA,uCACA,UACA,aACA,YACA,UACA,sBACA,QACA,SACA,YChNWG,GAAS,CACpB,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,MC3DWnB,GAAe,CAC1B,CAAEmD,GAAI,EAAGjD,MAAO,QAChB,CAAEiD,GAAI,EAAGjD,MAAO,WAChB,CAAEiD,GAAI,EAAGjD,MAAO,aAChB,CAAEiD,GAAI,EAAGjD,MAAO,SAChB,CAAEiD,GAAI,EAAGjD,MAAO,YAGLmC,GAAW,CACtB,CAAEc,GAAI,EAAGb,QAAS,UAClB,CAAEa,GAAI,EAAGb,QAAS,YAClB,CAAEa,GAAI,EAAGb,QAAS,WAClB,CAAEa,GAAI,EAAGb,QAAS,gBAClB,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","file":"static/js/main.715794d3.chunk.js","sourcesContent":["import styled, { createGlobalStyle } from \"styled-components\";\r\n\r\nexport const GlobalStyles = createGlobalStyle`\r\n\r\n*{\r\n    box-sizing:border-box;\r\n    margin:0;\r\n    padding:0;\r\n}\r\n\r\nhtml, body{\r\n    background:var(--bg-color)\r\n}\r\n\r\n:root{\r\n    --primary-font: 'Lora', serif;\r\n    --bg-color: #F6F9FC;\r\n    --primary-color: #7796FE;\r\n    --secondary-color: #FF865B;\r\n    --light-gray-color: #8A8787;\r\n    --label-black-color: #000000;\r\n    --success: #20bf6b;\r\n    --error: #eb4d4b;\r\n    --border-radius: 10px;\r\n    --box-shadow-alert: 0 2rem 4rem rgba(0, 0, 0, 0.25);\r\n    --content-overlay: rgba(0, 0, 0, 0.5);\r\n\r\n}\r\n`;\r\n\r\nexport const theme = {\r\n  justifyContentCenter: \"center\",\r\n  justifyContentEvenly: \"space-evenly\",\r\n  alignItems: \"center\",\r\n  flexDirection: \"row\",\r\n  fontSizeSM: \"20px\",\r\n  fontSizeMD: \"30px\",\r\n  fontSizeLG: \"40px\",\r\n  height: \"50vh\",\r\n  maxWidth: \"300px\",\r\n  formItemHeight: \"32.97px\",\r\n  grayColor: \"var(--light-gray-color)\",\r\n  color: \"var(--label-black-color)\",\r\n  fontWeight: \"200\",\r\n  alignCenter: \"center\",\r\n  alignStart: \"flex-start\",\r\n  top: \"5px\",\r\n  marginTop: \"0px\",\r\n  marginLeft: \"2px\",\r\n  marginTopInput: \"2px\",\r\n  errorLabelWidth: \"0px\",\r\n  left: \"0\",\r\n  h1Top: \"0\",\r\n  labelTop: \"0\",\r\n  gridPadding: \"25px 0 0 0;\",\r\n};\r\n\r\nexport const Container = styled.div`\r\n  max-width: 1400px;\r\n  margin: 0 auto;\r\n  padding: 0;\r\n`;\r\n\r\nexport const DisplayFlexMiddle = styled.div`\r\n  display: flex;\r\n  flex-direction: ${(props) => props.theme.flexDirection};\r\n  justify-content: ${(props) =>\r\n    props.evenly\r\n      ? props.theme.justifyContentEvenly\r\n      : props.theme.justifyContentCenter};\r\n  align-items: ${(props) => props.theme.alignItems};\r\n  height: ${(props) => props.theme.height};\r\n`;\r\n\r\nexport const H1 = styled.h1`\r\n  position: relative;\r\n  font-size: ${(props) => props.theme.fontSizeSM};\r\n  max-width: ${(props) => props.theme.maxWidth};\r\n  color: ${(props) => props.theme.grayColor};\r\n  font-weight: ${(props) => props.theme.fontWeight};\r\n  align-self: ${(props) =>\r\n    props.center ? props.theme.alignCenter : props.theme.alignStart};\r\n  left: ${(props) => props.theme.left};\r\n  top: ${(props) => props.theme.h1top};\r\n`;\r\n\r\nexport const H2 = styled.h2`\r\n  position: relative;\r\n  top: ${(props) => props.theme.top};\r\n  font-size: ${(props) => props.theme.fontSizeSM};\r\n  max-width: ${(props) => props.theme.maxWidth};\r\n  color: ${(props) => props.theme.grayColor};\r\n  font-weight: ${(props) => props.theme.fontWeight};\r\n  align-self: ${(props) =>\r\n    props.center ? props.theme.alignCenter : props.theme.alignStart};\r\n`;\r\n\r\nexport const Pragraph = styled.p`\r\n  position: relative;\r\n  top: ${(props) => props.theme.top};\r\n  font-size: ${(props) => props.theme.fontSizeSM};\r\n  max-width: ${(props) => props.theme.maxWidth};\r\n  color: ${(props) => props.theme.grayColor};\r\n  font-weight: ${(props) => props.theme.fontWeight};\r\n  align-self: ${(props) =>\r\n    props.center ? props.theme.alignCenter : props.theme.alignStart};\r\n`;\r\n\r\nexport const Header = styled.header`\r\n  display: block;\r\n`;\r\n\r\nexport const Span = styled.span`\r\n  font-size: ${(props) => props.theme.fontSizeLG};\r\n`;\r\n\r\nexport const SpanColor = styled.span`\r\n  color: ${(props) => props.theme.color};\r\n`;\r\n\r\nexport const AsteriskSpan = styled.span`\r\n  color: var(--primary-color);\r\n`;\r\nexport const PrimarySpan = styled.span`\r\n  color: var(--primary-color);\r\n`;\r\n\r\n// Card\r\n\r\nexport const Card = styled.div`\r\n  border: #fff;\r\n  background-color: #fff;\r\n  border-radius: var(--border-radius);\r\n  width: 373px;\r\n  height: 325px;\r\n  box-shadow: 0 8px 16px 0 var(--content-overlay);\r\n`;\r\n\r\nexport const SmallCard = styled(Card)`\r\n  width: ${(props) => props.theme.maxWidth};\r\n  height: ${(props) => props.theme.height};\r\n`;\r\n\r\nexport const CardSpacer = styled.div`\r\n  margin-top: 5px;\r\n`;\r\n\r\n// Grid\r\nexport const GridTwo = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(2, 1fr);\r\n  width: 100%;\r\n  padding: ${(props) => props.theme.gridPadding};\r\n  grid-gap: 5px;\r\n`;\r\n\r\nexport const HRLine = styled.hr`\r\n  color: var(--light-gray-color);\r\n  width: 100%;\r\n  position: relative;\r\n  margin-top: ${(props) => props.theme.marginTop};\r\n  top: ${(props) => props.theme.top};\r\n`;\r\n","import styled from \"styled-components\";\r\nimport Modal, { BaseModalBackground } from \"styled-react-modal\";\r\n\r\n// Hero\r\nexport const Hero = styled.div`\r\n  //   background: var(--primary-color);\r\n`;\r\n\r\nexport const HeroLogo = styled.h1`\r\n  font-size: ${(props) => props.theme.fontSizeMD};\r\n  color: var(--primary-color);\r\n`;\r\n\r\nexport const HeroCard = styled.div`\r\n  position: relative;\r\n  margin-top: 67rem;\r\n  padding: 10px 0;\r\n`;\r\n// Form\r\nexport const FormGroup = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding-left: 15px;\r\n  margin-top: 10px;\r\n`;\r\n\r\nexport const FormLabel = styled.label`\r\n  position: relative;\r\n  color: ${(props) => props.theme.color};\r\n  font-size: ${(props) => props.theme.fontSizeSM};\r\n  margin-left: ${(props) => props.theme.marginLeft};\r\n  margin-top: ${(props) => props.theme.marginTop};\r\n  width: ${(props) => props.theme.errorLabelWidth};\r\n  top: ${(props) => props.theme.labelTop};\r\n`;\r\n\r\nexport const FormInput = styled.input`\r\n  width: ${(props) => props.theme.maxWidth};\r\n  border: 1px solid var(--primary-color);\r\n  border-radius: 4px;\r\n  height: ${(props) => props.theme.formItemHeight};\r\n  margin-top: ${(props) => props.theme.marginTopInput};\r\n  padding: 4px;\r\n  ::placeholder {\r\n    padding: 4px;\r\n  }\r\n  :focus {\r\n    outline: none;\r\n  }\r\n  // :invalid {\r\n  //   border: 2px solid red;\r\n  // }\r\n\r\n  // :valid {\r\n  //   border: 2px solid green;\r\n  // }\r\n`;\r\n\r\nexport const FormSelect = styled.select`\r\n  width: ${(props) => props.theme.maxWidth};\r\n  border: 1px solid var(--primary-color);\r\n  border-radius: 4px;\r\n  height: ${(props) => props.theme.formItemHeight};\r\n  margin-top: 2px;\r\n  background: #fff;\r\n  cursor: pointer;\r\n`;\r\n\r\nexport const SelectOptions = styled.option`\r\n  font-size: 16px;\r\n  color: var(--primary-color);\r\n  cursor: pointer;\r\n`;\r\n\r\nexport const FormButton = styled.button`\r\n  // center button\r\n  // display: block;\r\n  // margin-left: auto;\r\n  // margin-right: auto;\r\n  border: 1px solid var(--primary-color);\r\n  border-radius: 5px;\r\n  background: var(--primary-color);\r\n  width: ${(props) => props.theme.maxWidth};\r\n  height: ${(props) => props.theme.formItemHeight};\r\n  margin-top: 10px;\r\n  cursor: pointer;\r\n  box-shadow: 0 2px 5px 0 var(--content-overlay);\r\n  color: #fff;\r\n`;\r\n\r\nexport const FormSubmission = styled.div`\r\n  position: relative;\r\n  top: 40px;\r\n`;\r\n\r\nexport const PreviewForm = styled.div`\r\n  // position: absolute;\r\n  // left: -50px;\r\n  // top: 150px;\r\n`;\r\n\r\n// Modal\r\nexport const StyledModal = Modal.styled`\r\n\r\n  width: 30rem;\r\n  height: 30rem;\r\n  display: flex;\r\n  flex-direction: column;\r\n  background-color: white;\r\n  opacity: ${(props) => props.opacity};\r\n  transition : all 0.3s ease-in-out;\r\n  border-radius:5px; \r\n`;\r\nexport const StyledCloseModal = styled.span`\r\n  position: relative;\r\n  bottom: 5px;\r\n  left: 420px;\r\n  font-size: 50px;\r\n  color: var(--light-gray-color);\r\n  cursor: pointer;\r\n`;\r\n\r\nexport const FadingBackground = styled(BaseModalBackground)`\r\n  opacity: ${(props) => props.opacity};\r\n  transition: all 0.3s ease-in-out;\r\n`;\r\n","// Time Complexity: 0(n)\r\nexport const formInputCheck = (data) => {\r\n  // loop through array\r\n  for (var x in data) {\r\n    // check if data exist\r\n    if (data[x]) {\r\n      // return data\r\n      return data[x];\r\n    }\r\n  }\r\n};\r\n// Time Complexity: 0(n)\r\nexport const formatPhoneNumber = (ref) => {\r\n  var numbers = ref.current.value.replace(/\\D/g, \"\"),\r\n    char = { 0: \"(\", 3: \") \", 6: \" - \" };\r\n  ref.current.value = \"\";\r\n  for (var i = 0; i < numbers.length; i++) {\r\n    ref.current.value += (char[i] || \"\") + numbers[i];\r\n  }\r\n};\r\n","import React, { useState, useEffect, createRef } from \"react\";\r\nimport ReCAPTCHA from \"react-google-recaptcha\";\r\nimport dotenv from \"dotenv\";\r\ndotenv.config({ path: \"/client/config.env\" });\r\n\r\nexport default function FormCaptcha({ setVerified }) {\r\n  const [load, setLoading] = useState(false);\r\n  //   process.env doesnt work as it showed undefined =(\r\n  const key = \"6LfefU0dAAAAAGc_x-MrFXBSbeTgA_modJtpgP1C\";\r\n  const reCaptchaRef = createRef();\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      setLoading(true);\r\n    }, 1500);\r\n    // console.log(\"reCaptcha Ref-\", reCaptchaRef);\r\n  });\r\n\r\n  return (\r\n    <div style={{ marginTop: \"10px\" }}>\r\n      {load && key && (\r\n        <ReCAPTCHA\r\n          theme='light'\r\n          ref={reCaptchaRef}\r\n          onChange={() => setVerified(true)}\r\n          sitekey={key}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport {\r\n  Container,\r\n  Card,\r\n  CardSpacer,\r\n  theme,\r\n  GridTwo,\r\n  AsteriskSpan,\r\n  H1,\r\n  DisplayFlexMiddle,\r\n} from \"../../styled-components/globalStyled\";\r\nimport { ThemeProvider } from \"styled-components\";\r\nimport {\r\n  FormGroup,\r\n  FormInput,\r\n  FormLabel,\r\n  FormSelect,\r\n  SelectOptions,\r\n  FormButton,\r\n  FormSubmission,\r\n} from \"../../styled-components/styled\";\r\n\r\nimport { formInputCheck, formatPhoneNumber } from \"./algorithms/FormAlgorithm\";\r\nimport ReCAPTCHA from \"../form/formValidation/FormCaptcha\";\r\n\r\nexport default function FormLogic({\r\n  number,\r\n  setNumber,\r\n  numberError,\r\n  lastName,\r\n  setLastName,\r\n  firstName,\r\n  setFirstName,\r\n  email,\r\n  setEmail,\r\n  titleOptions,\r\n  handleFormSubmit,\r\n  title,\r\n  setTitle,\r\n  SmallCard,\r\n  openModal,\r\n  StyledModal,\r\n  afterOpen,\r\n  beforeClose,\r\n  opacity,\r\n  StyledCloseModal,\r\n  FormPreview,\r\n  modalOpen,\r\n  dataArray,\r\n  firstNameError,\r\n  lastNameError,\r\n  emailError,\r\n  termsError,\r\n  setTerms,\r\n  terms,\r\n  countries,\r\n  country,\r\n  setCountry,\r\n  states,\r\n  state,\r\n  setState,\r\n  address,\r\n  setAddress,\r\n  addressError,\r\n  city,\r\n  setCity,\r\n  cityError,\r\n  zipCode,\r\n  setZipCode,\r\n  zipCodeError,\r\n  feetError,\r\n  inchesError,\r\n  setFeet,\r\n  setInches,\r\n  feet,\r\n  inches,\r\n  services,\r\n  service,\r\n  setService,\r\n  budgets,\r\n  budget,\r\n  setBudget,\r\n}) {\r\n  const firstRender = useRef(true);\r\n  const [verified, setVerified] = useState(false);\r\n  const formatPhoneRef = useRef();\r\n\r\n  useEffect(() => {\r\n    if (firstRender.current) {\r\n      firstRender.current = false;\r\n      return;\r\n    }\r\n\r\n    // getElementById();\r\n  }, []);\r\n\r\n  // const getElementById = () => {\r\n  //   if (emailError)\r\n  //     emailError\r\n  //       ? (document.getElementById(\"email\").style.borderColor = \"red\")\r\n  //       : (document.getElementById(\"email\").style.borderColor = \"green\");\r\n  //   else {\r\n  //     lastNameError\r\n  //       ? (document.getElementById(\"lastName\").style.borderColor = \"red\")\r\n  //       : (document.getElementById(\"lastName\").style.borderColor = \"green\");\r\n  //     nameError\r\n  //       ? (document.getElementById(\"firstName\").style.borderColor = \"red\")\r\n  //       : (document.getElementById(\"firstName\").style.borderColor = \"green\");\r\n  //   }\r\n  // };\r\n\r\n  return (\r\n    <Container onSubmit={handleFormSubmit}>\r\n      <ThemeProvider theme={theme}>\r\n        <Card>\r\n          <H1\r\n            theme={{\r\n              h1top: \"15px\",\r\n              left: \"15px\",\r\n              grayColor: \"var(--light-gray-color)\",\r\n              fontSizeSM: \"20px\",\r\n              fontWeight: \"200\",\r\n            }}\r\n          >\r\n            Required Fields <AsteriskSpan>* </AsteriskSpan>\r\n          </H1>\r\n          <GridTwo theme={{ gridPadding: \"25px 0 0 0\" }}>\r\n            {/* Last Name */}\r\n            <FormGroup>\r\n              <FormLabel htmlForm='lastName' theme={{ fontSizeSM: \"17px\" }}>\r\n                Last Name <AsteriskSpan>* </AsteriskSpan>\r\n              </FormLabel>\r\n              <FormInput\r\n                type='text'\r\n                id='lastName'\r\n                name='lastName'\r\n                placeholder='Doe'\r\n                maxLength='40'\r\n                value={lastName}\r\n                onChange={(e) => setLastName(e.target.value)}\r\n                theme={{ maxWidth: \"152px\", formItemHeight: \"32.97px\" }}\r\n                required\r\n              />\r\n\r\n              {lastNameError && lastName && (\r\n                <FormLabel\r\n                  theme={{\r\n                    color: \"var(--error)\",\r\n                    fontSizeSM: \"15px\",\r\n                    marginTop: \"2px\",\r\n                    errorLabelWidth: \"153px\",\r\n                  }}\r\n                >\r\n                  {lastNameError}\r\n                </FormLabel>\r\n              )}\r\n            </FormGroup>\r\n            {/* First Name */}\r\n            <FormGroup>\r\n              <FormLabel htmlForm='firstName' theme={{ fontSizeSM: \"17px\" }}>\r\n                First Name <AsteriskSpan>* </AsteriskSpan>\r\n              </FormLabel>\r\n              <FormInput\r\n                type='text'\r\n                id='firstName'\r\n                name='firstName'\r\n                placeholder='John'\r\n                maxLength='40'\r\n                value={firstName}\r\n                onChange={(e) => setFirstName(e.target.value)}\r\n                theme={{ maxWidth: \"152px\", formItemHeight: \"32.97px\" }}\r\n                required\r\n              />\r\n\r\n              {firstNameError && firstName && (\r\n                <FormLabel\r\n                  theme={{\r\n                    color: \"var(--error)\",\r\n                    fontSizeSM: \"15px\",\r\n                    marginTop: \"2px\",\r\n                    errorLabelWidth: \"153px\",\r\n                  }}\r\n                >\r\n                  {firstNameError}\r\n                </FormLabel>\r\n              )}\r\n            </FormGroup>\r\n          </GridTwo>\r\n          {/* Preferred Title */}\r\n          <FormGroup>\r\n            <FormLabel htmlForm='title' theme={{ fontSizeSM: \"17px\" }}>\r\n              Preferred Title <AsteriskSpan>* </AsteriskSpan>\r\n            </FormLabel>\r\n            <FormSelect\r\n              onChange={(e) => setTitle(e.target.value)}\r\n              theme={{ maxWidth: \"340px\", formItemHeight: \"32.97px\" }}\r\n            >\r\n              {titleOptions.map((options) => (\r\n                <SelectOptions\r\n                  id='title'\r\n                  value={options.title}\r\n                  key={options.id}\r\n                  required\r\n                >\r\n                  {options.title}\r\n                </SelectOptions>\r\n              ))}\r\n            </FormSelect>\r\n          </FormGroup>\r\n          <FormGroup>\r\n            <FormLabel htmlForm='email' theme={{ fontSizeSM: \"17px\" }}>\r\n              Email <AsteriskSpan>* </AsteriskSpan>\r\n            </FormLabel>\r\n            <FormInput\r\n              type='email'\r\n              id='email'\r\n              name='email'\r\n              placeholder='JohnDoe@yahoo.com'\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              theme={{ maxWidth: \"340px\", formItemHeight: \"32.97px\" }}\r\n              required\r\n            />\r\n            {emailError && (\r\n              <FormLabel\r\n                theme={{\r\n                  color: \"var(--error)\",\r\n                  fontSizeSM: \"15px\",\r\n                  marginTop: \"7px\",\r\n                }}\r\n              >\r\n                {emailError}\r\n              </FormLabel>\r\n            )}\r\n          </FormGroup>\r\n        </Card>\r\n        <CardSpacer />\r\n        <Card>\r\n          {/* Country/Region */}\r\n          <FormGroup>\r\n            <FormLabel\r\n              htmlForm='countryRegion'\r\n              theme={{ fontSizeSM: \"17px\", marginTop: \"10px\" }}\r\n            >\r\n              Country / Region <AsteriskSpan>* </AsteriskSpan>\r\n            </FormLabel>\r\n            <FormSelect\r\n              onChange={(e) => setCountry(e.target.value)}\r\n              theme={{ maxWidth: \"340px\", formItemHeight: \"32.97px\" }}\r\n            >\r\n              {countries.map((country, index) => (\r\n                <SelectOptions\r\n                  id='countryRegion'\r\n                  value={country}\r\n                  key={`country-${index}`}\r\n                  required\r\n                >\r\n                  {country}\r\n                </SelectOptions>\r\n              ))}\r\n            </FormSelect>\r\n          </FormGroup>\r\n          {/* Street Address */}\r\n          <FormGroup>\r\n            <FormLabel htmlForm='address' theme={{ fontSizeSM: \"17px\" }}>\r\n              Street Address <AsteriskSpan>* </AsteriskSpan>\r\n            </FormLabel>\r\n            <FormInput\r\n              type='text'\r\n              id='address'\r\n              name='address'\r\n              placeholder='1600 Holloway Ave'\r\n              value={address}\r\n              onChange={(e) => setAddress(e.target.value)}\r\n              theme={{ maxWidth: \"340px\", formItemHeight: \"32.97px\" }}\r\n              required\r\n            />\r\n          </FormGroup>\r\n          {addressError && (\r\n            <FormLabel\r\n              theme={{\r\n                color: \"var(--error)\",\r\n                fontSizeSM: \"15px\",\r\n                labelTop: \"5px\",\r\n                marginLeft: \"16px\",\r\n              }}\r\n            >\r\n              {addressError}\r\n            </FormLabel>\r\n          )}\r\n          {/* City */}\r\n          <FormGroup>\r\n            <FormLabel htmlForm='city' theme={{ fontSizeSM: \"17px\" }}>\r\n              City <AsteriskSpan>* </AsteriskSpan>\r\n            </FormLabel>\r\n            <FormInput\r\n              type='text'\r\n              id='city'\r\n              name='city'\r\n              placeholder='San Francisco'\r\n              value={city}\r\n              onChange={(e) => setCity(e.target.value)}\r\n              theme={{ maxWidth: \"340px\", formItemHeight: \"32.97px\" }}\r\n              required\r\n            />\r\n          </FormGroup>\r\n          {cityError && (\r\n            <FormLabel\r\n              theme={{\r\n                color: \"var(--error)\",\r\n                fontSizeSM: \"15px\",\r\n                labelTop: \"5px\",\r\n                marginLeft: \"16px\",\r\n              }}\r\n            >\r\n              {cityError}\r\n            </FormLabel>\r\n          )}\r\n          {/* State, Zip code */}\r\n          <GridTwo theme={{ gridPadding: \"5px 0 0 0\" }}>\r\n            {/* Last Name */}\r\n            <FormGroup>\r\n              <FormLabel htmlForm='state' theme={{ fontSizeSM: \"17px\" }}>\r\n                State <AsteriskSpan>* </AsteriskSpan>\r\n              </FormLabel>\r\n              <FormSelect\r\n                onChange={(e) => setState(e.target.value)}\r\n                theme={{ maxWidth: \"152px\", formItemHeight: \"32.97px\" }}\r\n              >\r\n                {states.map((state, index) => (\r\n                  <SelectOptions\r\n                    id='countryRegion'\r\n                    value={state}\r\n                    key={`states-${index}`}\r\n                    required\r\n                  >\r\n                    {state}\r\n                  </SelectOptions>\r\n                ))}\r\n              </FormSelect>\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <FormLabel htmlForm='zipcode' theme={{ fontSizeSM: \"17px\" }}>\r\n                Zip Code <AsteriskSpan>* </AsteriskSpan>\r\n              </FormLabel>\r\n              <FormInput\r\n                type='94112'\r\n                id='zipcode'\r\n                name='firstName'\r\n                placeholder='94116'\r\n                maxLength='5'\r\n                value={zipCode}\r\n                onChange={(e) => setZipCode(e.target.value)}\r\n                theme={{ maxWidth: \"152px\", formItemHeight: \"32.97px\" }}\r\n                required\r\n              />\r\n\r\n              {zipCodeError && (\r\n                <FormLabel\r\n                  theme={{\r\n                    color: \"var(--error)\",\r\n                    fontSizeSM: \"15px\",\r\n                    labelTop: \"5px\",\r\n                    marginLeft: \"2px\",\r\n                  }}\r\n                >\r\n                  {zipCodeError}\r\n                </FormLabel>\r\n              )}\r\n            </FormGroup>\r\n          </GridTwo>\r\n        </Card>\r\n        <CardSpacer />\r\n        <SmallCard theme={{ maxWidth: \"373px\", height: \"375px\" }}>\r\n          <GridTwo theme={{ gridPadding: \"5px 0 0 0\" }}>\r\n            {/* Height */}\r\n            <FormGroup>\r\n              <FormLabel htmlForm='height' theme={{ fontSizeSM: \"17px\" }}>\r\n                Your Height <AsteriskSpan> (optional) </AsteriskSpan>\r\n              </FormLabel>\r\n              <FormInput\r\n                type='text'\r\n                id='feet'\r\n                name='height'\r\n                placeholder='5'\r\n                maxLength='2'\r\n                value={feet}\r\n                onChange={(e) => setFeet(e.target.value)}\r\n                theme={{\r\n                  maxWidth: \"152px\",\r\n                  formItemHeight: \"32.97px\",\r\n                  marginTopInput: \"5px\",\r\n                }}\r\n              />\r\n              <FormLabel\r\n                htmlForm='feet'\r\n                theme={{\r\n                  fontSizeSM: \"17px\",\r\n                  marginTop: \"2px\",\r\n                  color: \"var( --light-gray-color)\",\r\n                }}\r\n              >\r\n                Feet {\"\"}\r\n                {feetError && (\r\n                  <FormLabel\r\n                    theme={{\r\n                      color: \"var(--error)\",\r\n                      fontSizeSM: \"15px\",\r\n                      labelTop: \"-1px\",\r\n                      marginLeft: \"45px\",\r\n                    }}\r\n                  >\r\n                    {feetError}\r\n                  </FormLabel>\r\n                )}\r\n              </FormLabel>\r\n            </FormGroup>\r\n            <FormGroup>\r\n              <FormInput\r\n                type='text'\r\n                id='inches'\r\n                name='inches'\r\n                placeholder='5'\r\n                maxLength='2'\r\n                value={inches}\r\n                onChange={(e) => setInches(e.target.value)}\r\n                theme={{\r\n                  maxWidth: \"152px\",\r\n                  formItemHeight: \"32.97px\",\r\n                  marginTopInput: \"22px\",\r\n                }}\r\n              />\r\n              <FormLabel\r\n                htmlForm='inches'\r\n                theme={{\r\n                  fontSizeSM: \"17px\",\r\n                  marginTop: \"2px\",\r\n                  color: \"var( --light-gray-color)\",\r\n                }}\r\n              >\r\n                Inches {\"\"}\r\n                {inchesError && (\r\n                  <FormLabel\r\n                    theme={{\r\n                      color: \"var(--error)\",\r\n                      fontSizeSM: \"15px\",\r\n                      labelTop: \"-1px\",\r\n                      marginLeft: \"15px\",\r\n                    }}\r\n                  >\r\n                    {inchesError}\r\n                  </FormLabel>\r\n                )}\r\n              </FormLabel>\r\n            </FormGroup>\r\n          </GridTwo>\r\n          {/* Phone Number */}\r\n          <FormGroup>\r\n            <FormLabel htmlForm='phoneNumber' theme={{ fontSizeSM: \"17px\" }}>\r\n              Phone Number <AsteriskSpan> (optional) </AsteriskSpan>\r\n            </FormLabel>\r\n\r\n            <FormInput\r\n              ref={formatPhoneRef}\r\n              type='tel'\r\n              id='phoneNumber'\r\n              name='phoneNumber'\r\n              placeholder='(xxx) xxx - xxxx'\r\n              maxLength='16'\r\n              value={number}\r\n              onChange={(e) => {\r\n                formatPhoneNumber(formatPhoneRef, e.target.value);\r\n                setNumber(e.target.value);\r\n              }}\r\n              theme={{ maxWidth: \"340px\", formItemHeight: \"32.97px\" }}\r\n            />\r\n          </FormGroup>\r\n\r\n          {numberError && (\r\n            <FormLabel\r\n              theme={{\r\n                color: \"var(--error)\",\r\n                fontSizeSM: \"15px\",\r\n                labelTop: \"5px\",\r\n                marginLeft: \"15px\",\r\n              }}\r\n            >\r\n              {numberError}\r\n            </FormLabel>\r\n          )}\r\n\r\n          {/* Services */}\r\n          <FormGroup>\r\n            <FormLabel htmlForm='services' theme={{ fontSizeSM: \"17px\" }}>\r\n              Services <AsteriskSpan> (optional) </AsteriskSpan>\r\n            </FormLabel>\r\n            <FormSelect\r\n              onChange={(e) => setService(e.target.value)}\r\n              theme={{ maxWidth: \"340px\", formItemHeight: \"32.97px\" }}\r\n            >\r\n              {services.map((options) => (\r\n                <SelectOptions\r\n                  id='services'\r\n                  value={options.service}\r\n                  key={options.id}\r\n                >\r\n                  {options.service}\r\n                </SelectOptions>\r\n              ))}\r\n            </FormSelect>\r\n          </FormGroup>\r\n          {/* Budget */}\r\n          <FormGroup>\r\n            <FormLabel htmlForm='budget' theme={{ fontSizeSM: \"17px\" }}>\r\n              Budget <AsteriskSpan> (optional) </AsteriskSpan>\r\n            </FormLabel>\r\n            <FormSelect\r\n              onChange={(e) => setBudget(e.target.value)}\r\n              theme={{ maxWidth: \"340px\", formItemHeight: \"32.97px\" }}\r\n            >\r\n              {budgets.map((options) => (\r\n                <SelectOptions\r\n                  id='budget'\r\n                  value={options.budget}\r\n                  key={options.id}\r\n                >\r\n                  {options.budget}\r\n                </SelectOptions>\r\n              ))}\r\n            </FormSelect>\r\n          </FormGroup>\r\n        </SmallCard>\r\n\r\n        {/* Preview Form  */}\r\n        {formInputCheck(dataArray) ? (\r\n          <>\r\n            <CardSpacer />\r\n            {firstNameError ||\r\n            lastNameError ||\r\n            emailError ||\r\n            termsError ||\r\n            cityError ||\r\n            zipCodeError ||\r\n            feetError ||\r\n            inchesError ||\r\n            numberError ||\r\n            addressError ? null : (\r\n              <SmallCard theme={{ maxWidth: \"373px\", height: \"55px\" }}>\r\n                <FormGroup>\r\n                  <FormButton\r\n                    onClick={openModal}\r\n                    // disabled={!email || !firstName || !lastName || !title}\r\n                    theme={{ maxWidth: \"340px\", formItemHeight: \"32.97px\" }}\r\n                  >\r\n                    Preview Form\r\n                  </FormButton>\r\n                </FormGroup>\r\n              </SmallCard>\r\n            )}\r\n\r\n            <StyledModal\r\n              isOpen={modalOpen}\r\n              afterOpen={afterOpen}\r\n              beforeClose={beforeClose}\r\n              onBackgroundClick={openModal}\r\n              backgroundProps={{ opacity }}\r\n            >\r\n              <StyledCloseModal onClick={openModal}>&times;</StyledCloseModal>\r\n\r\n              <FormPreview\r\n                last={lastName}\r\n                first={firstName}\r\n                title={title}\r\n                email={email}\r\n                country={country}\r\n                state={state}\r\n                address={address}\r\n                feet={feet}\r\n                inches={inches}\r\n                zipcode={zipCode}\r\n                number={number}\r\n                service={service}\r\n                budget={budget}\r\n                city={city}\r\n              />\r\n            </StyledModal>\r\n          </>\r\n        ) : null}\r\n        <CardSpacer />\r\n        {/* Submit Form */}\r\n        <Card>\r\n          <FormGroup>\r\n            <FormSubmission>\r\n              <FormLabel\r\n                htmlFor='agree'\r\n                theme={{\r\n                  fontSizeSM: \"20px\",\r\n                  color: \"var( --light-gray-color)\",\r\n                }}\r\n              >\r\n                By submitting, I agreed to the {\"\"}\r\n                <NavLink to='#' style={{ color: \"var(--primary-color)\" }}>\r\n                  Terms\r\n                </NavLink>\r\n                <AsteriskSpan>* </AsteriskSpan>\r\n              </FormLabel>\r\n              <FormInput\r\n                type='checkbox'\r\n                id='agree'\r\n                name='agreed'\r\n                value={terms}\r\n                onChange={() => setTerms(true)}\r\n                theme={{ maxWidth: \"26px\", formItemHeight: \"13px\" }}\r\n              />\r\n              {!terms && (\r\n                <FormLabel\r\n                  theme={{\r\n                    color: \"var(--error)\",\r\n                    fontSizeSM: \"15px\",\r\n                  }}\r\n                >\r\n                  You must agree to our terms by checking the box.\r\n                </FormLabel>\r\n              )}\r\n              <ReCAPTCHA setVerified={setVerified} />\r\n              {!verified ? (\r\n                <FormLabel\r\n                  theme={{\r\n                    fontSizeSM: \"16px\",\r\n                    color: \"var( --error)\",\r\n                  }}\r\n                >\r\n                  Please verify that you're not a bot!\r\n                </FormLabel>\r\n              ) : null}\r\n              <FormButton\r\n                type='submit'\r\n                disabled={\r\n                  !email ||\r\n                  !firstName ||\r\n                  !lastName ||\r\n                  !zipCode ||\r\n                  !address ||\r\n                  !terms ||\r\n                  !number ||\r\n                  !feet ||\r\n                  !inches ||\r\n                  !verified\r\n                }\r\n                theme={{ maxWidth: \"340px\", formItemHeight: \"32.97px\" }}\r\n              >\r\n                Submit\r\n              </FormButton>\r\n            </FormSubmission>\r\n          </FormGroup>\r\n        </Card>\r\n      </ThemeProvider>\r\n    </Container>\r\n  );\r\n}\r\n","export const countries = [\r\n  \"Afghanistan\",\r\n  \"Albania\",\r\n  \"Algeria\",\r\n  \"Andorra\",\r\n  \"Angola\",\r\n  \"Anguilla\",\r\n  \"Antigua &amp; Barbuda\",\r\n  \"Argentina\",\r\n  \"Armenia\",\r\n  \"Aruba\",\r\n  \"Australia\",\r\n  \"Austria\",\r\n  \"Azerbaijan\",\r\n  \"Bahamas\",\r\n  \"Bahrain\",\r\n  \"Bangladesh\",\r\n  \"Barbados\",\r\n  \"Belarus\",\r\n  \"Belgium\",\r\n  \"Belize\",\r\n  \"Benin\",\r\n  \"Bermuda\",\r\n  \"Bhutan\",\r\n  \"Bolivia\",\r\n  \"Bosnia &amp; Herzegovina\",\r\n  \"Botswana\",\r\n  \"Brazil\",\r\n  \"British Virgin Islands\",\r\n  \"Brunei\",\r\n  \"Bulgaria\",\r\n  \"Burkina Faso\",\r\n  \"Burundi\",\r\n  \"Cambodia\",\r\n  \"Cameroon\",\r\n  \"Canada\",\r\n  \"Cape Verde\",\r\n  \"Cayman Islands\",\r\n  \"Chad\",\r\n  \"Chile\",\r\n  \"China\",\r\n  \"Colombia\",\r\n  \"Congo\",\r\n  \"Cook Islands\",\r\n  \"Costa Rica\",\r\n  \"Cote D Ivoire\",\r\n  \"Croatia\",\r\n  \"Cruise Ship\",\r\n  \"Cuba\",\r\n  \"Cyprus\",\r\n  \"Czech Republic\",\r\n  \"Denmark\",\r\n  \"Djibouti\",\r\n  \"Dominica\",\r\n  \"Dominican Republic\",\r\n  \"Ecuador\",\r\n  \"Egypt\",\r\n  \"El Salvador\",\r\n  \"Equatorial Guinea\",\r\n  \"Estonia\",\r\n  \"Ethiopia\",\r\n  \"Falkland Islands\",\r\n  \"Faroe Islands\",\r\n  \"Fiji\",\r\n  \"Finland\",\r\n  \"France\",\r\n  \"French Polynesia\",\r\n  \"French West Indies\",\r\n  \"Gabon\",\r\n  \"Gambia\",\r\n  \"Georgia\",\r\n  \"Germany\",\r\n  \"Ghana\",\r\n  \"Gibraltar\",\r\n  \"Greece\",\r\n  \"Greenland\",\r\n  \"Grenada\",\r\n  \"Guam\",\r\n  \"Guatemala\",\r\n  \"Guernsey\",\r\n  \"Guinea\",\r\n  \"Guinea Bissau\",\r\n  \"Guyana\",\r\n  \"Haiti\",\r\n  \"Honduras\",\r\n  \"Hong Kong\",\r\n  \"Hungary\",\r\n  \"Iceland\",\r\n  \"India\",\r\n  \"Indonesia\",\r\n  \"Iran\",\r\n  \"Iraq\",\r\n  \"Ireland\",\r\n  \"Isle of Man\",\r\n  \"Israel\",\r\n  \"Italy\",\r\n  \"Jamaica\",\r\n  \"Japan\",\r\n  \"Jersey\",\r\n  \"Jordan\",\r\n  \"Kazakhstan\",\r\n  \"Kenya\",\r\n  \"Kuwait\",\r\n  \"Kyrgyz Republic\",\r\n  \"Laos\",\r\n  \"Latvia\",\r\n  \"Lebanon\",\r\n  \"Lesotho\",\r\n  \"Liberia\",\r\n  \"Libya\",\r\n  \"Liechtenstein\",\r\n  \"Lithuania\",\r\n  \"Luxembourg\",\r\n  \"Macau\",\r\n  \"Macedonia\",\r\n  \"Madagascar\",\r\n  \"Malawi\",\r\n  \"Malaysia\",\r\n  \"Maldives\",\r\n  \"Mali\",\r\n  \"Malta\",\r\n  \"Mauritania\",\r\n  \"Mauritius\",\r\n  \"Mexico\",\r\n  \"Moldova\",\r\n  \"Monaco\",\r\n  \"Mongolia\",\r\n  \"Montenegro\",\r\n  \"Montserrat\",\r\n  \"Morocco\",\r\n  \"Mozambique\",\r\n  \"Namibia\",\r\n  \"Nepal\",\r\n  \"Netherlands\",\r\n  \"Netherlands Antilles\",\r\n  \"New Caledonia\",\r\n  \"New Zealand\",\r\n  \"Nicaragua\",\r\n  \"Niger\",\r\n  \"Nigeria\",\r\n  \"Norway\",\r\n  \"Oman\",\r\n  \"Pakistan\",\r\n  \"Palestine\",\r\n  \"Panama\",\r\n  \"Papua New Guinea\",\r\n  \"Paraguay\",\r\n  \"Peru\",\r\n  \"Philippines\",\r\n  \"Poland\",\r\n  \"Portugal\",\r\n  \"Puerto Rico\",\r\n  \"Qatar\",\r\n  \"Reunion\",\r\n  \"Romania\",\r\n  \"Russia\",\r\n  \"Rwanda\",\r\n  \"Saint Pierre &amp; Miquelon\",\r\n  \"Samoa\",\r\n  \"San Marino\",\r\n  \"Satellite\",\r\n  \"Saudi Arabia\",\r\n  \"Senegal\",\r\n  \"Serbia\",\r\n  \"Seychelles\",\r\n  \"Sierra Leone\",\r\n  \"Singapore\",\r\n  \"Slovakia\",\r\n  \"Slovenia\",\r\n  \"South Africa\",\r\n  \"South Korea\",\r\n  \"Spain\",\r\n  \"Sri Lanka\",\r\n  \"St Kitts &amp; Nevis\",\r\n  \"St Lucia\",\r\n  \"St Vincent\",\r\n  \"St. Lucia\",\r\n  \"Sudan\",\r\n  \"Suriname\",\r\n  \"Swaziland\",\r\n  \"Sweden\",\r\n  \"Switzerland\",\r\n  \"Syria\",\r\n  \"Taiwan\",\r\n  \"Tajikistan\",\r\n  \"Tanzania\",\r\n  \"Thailand\",\r\n  \"Timor L'Este\",\r\n  \"Togo\",\r\n  \"Tonga\",\r\n  \"Trinidad &amp; Tobago\",\r\n  \"Tunisia\",\r\n  \"Turkey\",\r\n  \"Turkmenistan\",\r\n  \"Turks &amp; Caicos\",\r\n  \"Uganda\",\r\n  \"Ukraine\",\r\n  \"United Arab Emirates\",\r\n  \"United Kingdom\",\r\n  \"United States\",\r\n  \"United States Minor Outlying Islands\",\r\n  \"Uruguay\",\r\n  \"Uzbekistan\",\r\n  \"Venezuela\",\r\n  \"Vietnam\",\r\n  \"Virgin Islands (US)\",\r\n  \"Yemen\",\r\n  \"Zambia\",\r\n  \"Zimbabwe\",\r\n];\r\n","export const states = [\r\n  \"AL\",\r\n  \"AK\",\r\n  \"AS\",\r\n  \"AZ\",\r\n  \"AR\",\r\n  \"CA\",\r\n  \"CO\",\r\n  \"CT\",\r\n  \"DE\",\r\n  \"DC\",\r\n  \"FM\",\r\n  \"FL\",\r\n  \"GA\",\r\n  \"GU\",\r\n  \"HI\",\r\n  \"ID\",\r\n  \"IL\",\r\n  \"IN\",\r\n  \"IA\",\r\n  \"KS\",\r\n  \"KY\",\r\n  \"LA\",\r\n  \"ME\",\r\n  \"MH\",\r\n  \"MD\",\r\n  \"MA\",\r\n  \"MI\",\r\n  \"MN\",\r\n  \"MS\",\r\n  \"MO\",\r\n  \"MT\",\r\n  \"NE\",\r\n  \"NV\",\r\n  \"NH\",\r\n  \"NJ\",\r\n  \"NM\",\r\n  \"NY\",\r\n  \"NC\",\r\n  \"ND\",\r\n  \"MP\",\r\n  \"OH\",\r\n  \"OK\",\r\n  \"OR\",\r\n  \"PW\",\r\n  \"PA\",\r\n  \"PR\",\r\n  \"RI\",\r\n  \"SC\",\r\n  \"SD\",\r\n  \"TN\",\r\n  \"TX\",\r\n  \"UT\",\r\n  \"VT\",\r\n  \"VI\",\r\n  \"VA\",\r\n  \"WA\",\r\n  \"WV\",\r\n  \"WI\",\r\n  \"WY\",\r\n];\r\n","export const titleOptions = [\r\n  { id: 1, title: \"None\" },\r\n  { id: 2, title: \"Student\" },\r\n  { id: 3, title: \"Professor\" },\r\n  { id: 4, title: \"Staff\" },\r\n  { id: 5, title: \"Retired\" },\r\n];\r\n\r\nexport const services = [\r\n  { id: 1, service: \"E-mail\" },\r\n  { id: 2, service: \"Facebook\" },\r\n  { id: 3, service: \"Twitter\" },\r\n  { id: 4, service: \"Surface Mail\" },\r\n  { id: 5, service: \"Personal Visit\" },\r\n];\r\n\r\nexport const budgets = [\r\n  { id: 1, budget: \"< $50\" },\r\n  { id: 2, budget: \"$50 - $100\" },\r\n  { id: 3, budget: \"> $100\" },\r\n];\r\n","import React from \"react\";\r\nimport {\r\n  Container,\r\n  DisplayFlexMiddle,\r\n  CardSpacer,\r\n  theme,\r\n  H1,\r\n  H2,\r\n  Pragraph,\r\n  SpanColor,\r\n  HRLine,\r\n  PrimarySpan,\r\n} from \"../../styled-components/globalStyled\";\r\n\r\nimport { PreviewForm } from \"../../styled-components/styled\";\r\nimport { ThemeProvider } from \"styled-components\";\r\nimport { formInputCheck } from \"./algorithms/FormAlgorithm\";\r\nimport { countries } from \"../../components/form/data/countries\";\r\nimport { states } from \"../../components/form/data/states\";\r\nimport { services, budgets } from \"../../components/form/data/selects\";\r\nexport default function FormPreview(props) {\r\n  var propsCheck = [\r\n    props.last,\r\n    props.first,\r\n    props.title,\r\n    props.email,\r\n    props.country,\r\n    props.state,\r\n    props.address,\r\n    props.city,\r\n    props.zipcode,\r\n    props.feet,\r\n    props.inches,\r\n    props.number,\r\n    props.service,\r\n    props.budget,\r\n  ];\r\n  // if serevice/budget is null use first ele\r\n  const budget = budgets[0];\r\n  const service = services[0];\r\n\r\n  return (\r\n    <Container>\r\n      <CardSpacer />\r\n      <ThemeProvider theme={theme}>\r\n        {formInputCheck(propsCheck) ? (\r\n          <PreviewForm>\r\n            <H1\r\n              theme={{\r\n                grayColor: \"var(--label-black-color)\",\r\n                fontSizeSM: \"25px\",\r\n              }}\r\n            >\r\n              Preview of Form Submission\r\n            </H1>\r\n            <DisplayFlexMiddle\r\n              theme={{\r\n                height: \"300px\",\r\n                alignItems: \"flex-start\",\r\n                flexDirection: \"column\",\r\n                justifyContentCenter: \"center\",\r\n              }}\r\n            >\r\n              <H2\r\n                center\r\n                theme={{\r\n                  grayColor: \"var(--primary-color)\",\r\n                  maxWidth: \"200px\",\r\n                  fontWeight: \"200\",\r\n                  alignCenter: \"center\",\r\n                }}\r\n              >\r\n                {props.last || props.first ? (\r\n                  <div>{props.last + \" \" + props.first}</div>\r\n                ) : null}\r\n              </H2>\r\n\r\n              <Pragraph\r\n                theme={{\r\n                  fontSizeSM: \"20px\",\r\n                  fontWeight: \"200\",\r\n                  top: \"5px\",\r\n                }}\r\n              >\r\n                {props.title ? (\r\n                  <SpanColor>\r\n                    Preferred Title: <PrimarySpan>{props.title}</PrimarySpan>\r\n                  </SpanColor>\r\n                ) : (\r\n                  <SpanColor>\r\n                    Preferred Title: <PrimarySpan>None</PrimarySpan>\r\n                  </SpanColor>\r\n                )}\r\n              </Pragraph>\r\n              <Pragraph\r\n                theme={{\r\n                  fontSizeSM: \"20px\",\r\n                  fontWeight: \"200\",\r\n                  top: \"5px\",\r\n                }}\r\n              >\r\n                {props.email ? (\r\n                  <SpanColor>\r\n                    Email: <PrimarySpan>{props.email}</PrimarySpan>\r\n                  </SpanColor>\r\n                ) : null}\r\n              </Pragraph>\r\n              <HRLine theme={{ marginTop: \"10px\", top: \"10px\" }}></HRLine>\r\n              <Pragraph\r\n                theme={{\r\n                  fontSizeSM: \"20px\",\r\n                  fontWeight: \"200\",\r\n                  top: \"20px\",\r\n                }}\r\n              >\r\n                {props.country ? (\r\n                  <SpanColor>\r\n                    Country/Region: <PrimarySpan>{props.country}</PrimarySpan>\r\n                  </SpanColor>\r\n                ) : (\r\n                  <SpanColor>\r\n                    Country/Region: <PrimarySpan>{countries[0]}</PrimarySpan>\r\n                  </SpanColor>\r\n                )}\r\n              </Pragraph>\r\n              <Pragraph\r\n                theme={{\r\n                  fontSizeSM: \"20px\",\r\n                  fontWeight: \"200\",\r\n                  top: \"20px\",\r\n                }}\r\n              >\r\n                {props.address ? (\r\n                  <SpanColor>\r\n                    Address: <PrimarySpan>{props.address}</PrimarySpan>\r\n                  </SpanColor>\r\n                ) : null}\r\n              </Pragraph>\r\n              <Pragraph\r\n                theme={{\r\n                  fontSizeSM: \"20px\",\r\n                  fontWeight: \"200\",\r\n                  top: \"20px\",\r\n                }}\r\n              >\r\n                {props.city ? (\r\n                  <SpanColor>\r\n                    City: <PrimarySpan>{props.city}</PrimarySpan>\r\n                  </SpanColor>\r\n                ) : null}\r\n              </Pragraph>\r\n              <Pragraph\r\n                theme={{\r\n                  fontSizeSM: \"20px\",\r\n                  fontWeight: \"200\",\r\n                  top: \"20px\",\r\n                }}\r\n              >\r\n                {props.state ? (\r\n                  <SpanColor>\r\n                    State: <PrimarySpan>{props.state}</PrimarySpan>\r\n                  </SpanColor>\r\n                ) : (\r\n                  <SpanColor>\r\n                    State: <PrimarySpan>{states[0]}</PrimarySpan>\r\n                  </SpanColor>\r\n                )}\r\n              </Pragraph>\r\n              <Pragraph\r\n                theme={{\r\n                  fontSizeSM: \"20px\",\r\n                  fontWeight: \"200\",\r\n                  top: \"20px\",\r\n                }}\r\n              >\r\n                {props.zipcode ? (\r\n                  <SpanColor>\r\n                    Zip Code: <PrimarySpan>{props.zipcode}</PrimarySpan>\r\n                  </SpanColor>\r\n                ) : null}\r\n              </Pragraph>\r\n              <HRLine theme={{ marginTop: \"15px\", top: \"10px\" }}></HRLine>\r\n              <Pragraph\r\n                theme={{\r\n                  fontSizeSM: \"20px\",\r\n                  fontWeight: \"200\",\r\n                  top: \"20px\",\r\n                }}\r\n              >\r\n                {props.feet && props.inches ? (\r\n                  <SpanColor>\r\n                    Height:{\" \"}\r\n                    <PrimarySpan>\r\n                      {props.feet}' {props.inches}\"\r\n                    </PrimarySpan>\r\n                  </SpanColor>\r\n                ) : null}\r\n              </Pragraph>\r\n              <Pragraph\r\n                theme={{\r\n                  fontSizeSM: \"20px\",\r\n                  fontWeight: \"200\",\r\n                  top: \"20px\",\r\n                }}\r\n              >\r\n                {props.number ? (\r\n                  <SpanColor>\r\n                    Phone Number: <PrimarySpan>{props.number}</PrimarySpan>\r\n                  </SpanColor>\r\n                ) : null}\r\n              </Pragraph>\r\n              <Pragraph\r\n                theme={{\r\n                  fontSizeSM: \"20px\",\r\n                  fontWeight: \"200\",\r\n                  top: \"20px\",\r\n                }}\r\n              >\r\n                {props.service ? (\r\n                  <SpanColor>\r\n                    Service: <PrimarySpan>{props.service}</PrimarySpan>\r\n                  </SpanColor>\r\n                ) : (\r\n                  <SpanColor>\r\n                    Services: <PrimarySpan>{service.service}</PrimarySpan>\r\n                  </SpanColor>\r\n                )}\r\n              </Pragraph>\r\n              <Pragraph\r\n                theme={{\r\n                  fontSizeSM: \"20px\",\r\n                  fontWeight: \"200\",\r\n                  top: \"20px\",\r\n                }}\r\n              >\r\n                {props.budget ? (\r\n                  <SpanColor>\r\n                    Budget: <PrimarySpan>{props.budget}</PrimarySpan>\r\n                  </SpanColor>\r\n                ) : (\r\n                  <SpanColor>\r\n                    Budget: <PrimarySpan>{budget.budget}</PrimarySpan>\r\n                  </SpanColor>\r\n                )}\r\n              </Pragraph>\r\n            </DisplayFlexMiddle>\r\n          </PreviewForm>\r\n        ) : null}\r\n      </ThemeProvider>\r\n    </Container>\r\n  );\r\n}\r\n","// Validator for last and first name\r\nexport const nameValidation = (nameType, name, setError) => {\r\n  const nameRegex = /^[a-zA-Z]+(([',. -][a-zA-Z ])?[a-zA-Z]*){0,39}$/;\r\n  switch (nameType) {\r\n    case nameType:\r\n      if (nameType.length === 0) {\r\n        setError(`${name} is required.`);\r\n      } else if (nameType.length >= 40 || !nameType.match(nameRegex)) {\r\n        setError(`${name} can only be up to 40 characters.`);\r\n      } else {\r\n        setError(\"\");\r\n      }\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n};\r\n\r\nexport const emailValidation = (nameType, setError) => {\r\n  const emailRegex =\r\n    /^([a-zA-Z0-9_\\-\\.]+)@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.)|(([a-zA-Z0-9\\-]+\\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\\]?)$/;\r\n  if (!nameType.match(emailRegex)) {\r\n    setError(\"Enter a valid email.\");\r\n  } else {\r\n    setError(\"\");\r\n  }\r\n};\r\n\r\nexport const termsValidation = (nameType, setError) => {\r\n  var isChecked = document.getElementById(\"agree\");\r\n  if (nameType && isChecked.checked === false) {\r\n    setError(\"You must agree to our terms by checking the box.\");\r\n  } else {\r\n    setError(\"\");\r\n  }\r\n};\r\n\r\nexport const addressValidations = (nameType, name, setError) => {\r\n  const addressRegex =\r\n    /^(\\d+) ?([A-Za-z](?= ))? (.*?) ([^ ]+?) ?((?<= )APT)? ?((?<= )\\d*)?$/;\r\n  const cityRegex = /^[a-zA-Z\\u0080-\\u024F\\s\\/\\-\\)\\(\\`\\.\\\"\\']+$/;\r\n  const zipRegex = /^\\d{5}$/;\r\n  switch (nameType) {\r\n    case nameType:\r\n      if (nameType.length === 0) {\r\n        setError(`${name} is required.`);\r\n      } else if (\r\n        name === \"Address\" &&\r\n        (nameType.length >= 40 || !nameType.match(addressRegex))\r\n      ) {\r\n        setError(`${name} can only be up to 40 alphanumeric characters.`);\r\n      } else if (\r\n        name === \"city\" &&\r\n        (nameType.length >= 40 || !nameType.match(cityRegex))\r\n      ) {\r\n        setError(`Invalid ${name}.`);\r\n      } else if (name === \"zip code\" && !nameType.match(zipRegex)) {\r\n        setError(`Invalid ${name}`);\r\n      } else {\r\n        setError(\"\");\r\n      }\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n};\r\n\r\nexport const heightValidation = (nameType, name, setError) => {\r\n  const nonNegNumRegex = /^[0-9]+$/;\r\n  switch (nameType) {\r\n    case nameType:\r\n      if (nameType.length === 0) {\r\n        setError(`${name} is required.`);\r\n      } else if (!nameType.match(nonNegNumRegex)) {\r\n        setError(`Invalid ${name}. `);\r\n      } else {\r\n        setError(\"\");\r\n      }\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n};\r\n\r\nexport const PhoneNumberValidation = (nameType, name, setError) => {\r\n  switch (nameType) {\r\n    case nameType:\r\n      if (nameType.length < 10) {\r\n        setError(`Enter a 10 digit ${name}`);\r\n      } else if (nameType.length >= 10) {\r\n        setError(\"\");\r\n      }\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n};\r\n","export const setUserFirstName = (firstName) => {\r\n  return { type: \"SET_USER_FIRST_NAME\", firstName };\r\n};\r\n\r\nexport const setUserLastName = (lastName) => {\r\n  return { type: \"SET_USER_LAST_NAME\", lastName };\r\n};\r\n\r\nexport const setUserEmail = (email) => {\r\n  return { type: \"SET_USER_EMAIL\", email };\r\n};\r\n\r\nexport const setUserTitle = (title) => {\r\n  return { type: \"SET_USER_TITLE\", title };\r\n};\r\n\r\nexport const setUserHeight = (feet, inches) => {\r\n  return { type: \"SET_USER_HEIGHT\", feet: feet, inches: inches };\r\n};\r\n\r\nexport const setUserCountry = (country) => {\r\n  return { type: \"SET_USER_COUNTRY\", country };\r\n};\r\n\r\nexport const setUserStates = (states) => {\r\n  return { type: \"SET_USER_STATES\", states };\r\n};\r\n\r\nexport const setUserCity = (city) => {\r\n  return { type: \"SET_USER_CITY\", city };\r\n};\r\n\r\nexport const setUserPhoneNumber = (phoneNumber) => {\r\n  return { type: \"SET_USER_PHONE_NUMBER\", phoneNumber };\r\n};\r\n\r\nexport const setUserServices = (services) => {\r\n  return { type: \"SET_USER_SERVICES\", services };\r\n};\r\n\r\nexport const setUserBudget = (budget) => {\r\n  return { type: \"SET_USER_BUDGET\", budget };\r\n};\r\n\r\nexport const setUserAddress = (address) => {\r\n  return { type: \"SET_USER_ADDRESS\", address };\r\n};\r\n\r\nexport const setUserZipCode = (zipcode) => {\r\n  return { type: \"SET_USER_ZIPCODE\", zipcode };\r\n};\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useState, useEffect, useRef } from \"react\";\r\nimport FormLogic from \"../../components/form/FormLogic\";\r\nimport FormPreview from \"../../components/form/FormPreview\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { SmallCard } from \"../../styled-components/globalStyled\";\r\nimport { StyledModal, StyledCloseModal } from \"../../styled-components/styled\";\r\nimport {\r\n  titleOptions,\r\n  services,\r\n  budgets,\r\n} from \"../../components/form/data/selects\";\r\nimport { countries } from \"../../components/form/data/countries\";\r\nimport { states } from \"../../components/form/data/states\";\r\nimport {\r\n  nameValidation,\r\n  emailValidation,\r\n  termsValidation,\r\n  addressValidations,\r\n  heightValidation,\r\n  PhoneNumberValidation,\r\n} from \"../../components/form/formValidation/FormValidation\";\r\n\r\nimport {\r\n  setUserFirstName,\r\n  setUserLastName,\r\n  setUserTitle,\r\n  setUserEmail,\r\n  setUserCountry,\r\n  setUserStates,\r\n  setUserCity,\r\n  setUserPhoneNumber,\r\n  setUserServices,\r\n  setUserBudget,\r\n  setUserAddress,\r\n  setUserZipCode,\r\n  setUserHeight,\r\n} from \"../../redux/actions/formActions\";\r\nexport default function FormData() {\r\n  // Redux dispatch\r\n  const dispatch = useDispatch();\r\n  // Email\r\n  const [email, setEmail] = useState(\"\");\r\n  // Names\r\n  const [lastName, setLastName] = useState(\"\");\r\n  const [firstName, setFirstName] = useState(\"\");\r\n  // Number\r\n  const [number, setNumber] = useState(\"\");\r\n  // title\r\n  const [title, setTitle] = useState(\"\");\r\n  // country/region\r\n  const [country, setCountry] = useState(\"\");\r\n  // state\r\n  const [state, setState] = useState(\"\");\r\n  // Street Address\r\n  const [address, setAddress] = useState(\"\");\r\n  // city\r\n  const [city, setCity] = useState(\"\");\r\n  // Zip Code\r\n  const [zipCode, setZipCode] = useState(\"\");\r\n  // terms\r\n  const [terms, setTerms] = useState(false);\r\n  // services\r\n  const [service, setService] = useState();\r\n  // budget\r\n  const [budget, setBudget] = useState();\r\n  // Height\r\n  const [feet, setFeet] = useState(\"\");\r\n  const [inches, setInches] = useState(\"\");\r\n  // Errors\r\n  const [firstNameError, setFirstNameError] = useState();\r\n  const [lastNameError, setLastNameError] = useState();\r\n  const [emailError, setEmailError] = useState();\r\n  const [termsError, setTermsError] = useState();\r\n  const [addressError, setAddressError] = useState();\r\n  const [cityError, setCityError] = useState();\r\n  const [zipCodeError, setZipCodeError] = useState();\r\n  const [feetError, setFeetError] = useState();\r\n  const [inchesError, setInchesError] = useState();\r\n  const [numberError, setNumberError] = useState();\r\n  // Required fields array checker\r\n  const dataArray = {\r\n    title,\r\n    firstName,\r\n    lastName,\r\n    email,\r\n    country,\r\n    state,\r\n    address,\r\n    city,\r\n    zipCode,\r\n    terms,\r\n  };\r\n  const firstRender = useRef(true);\r\n\r\n  useEffect(() => {\r\n    if (firstRender.current) {\r\n      firstRender.current = false;\r\n      return;\r\n    }\r\n    console.log(dataArray);\r\n    firstName && nameValidation(firstName, \"First name\", setFirstNameError);\r\n    lastName && nameValidation(lastName, \"Last name\", setLastNameError);\r\n    email && emailValidation(email, setEmailError);\r\n    terms && termsValidation(terms, setTermsError);\r\n    address && addressValidations(address, \"Address\", setAddressError);\r\n    city && addressValidations(city, \"city\", setCityError);\r\n    zipCode && addressValidations(zipCode, \"zip code\", setZipCodeError);\r\n    feet && heightValidation(feet, \"Feet\", setFeetError);\r\n    inches && heightValidation(inches, \"Inches\", setInchesError);\r\n    number && PhoneNumberValidation(number, \"phone number\", setNumberError);\r\n  }, [\r\n    lastName,\r\n    firstName,\r\n    email,\r\n    terms,\r\n    country,\r\n    states,\r\n    address,\r\n    city,\r\n    zipCode,\r\n    feet,\r\n    inches,\r\n    number,\r\n  ]);\r\n\r\n  const handleFormSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch(setUserFirstName(firstName));\r\n    dispatch(setUserLastName(lastName));\r\n    dispatch(setUserEmail(email));\r\n    dispatch(setUserCity(city));\r\n    dispatch(setUserAddress(address));\r\n    dispatch(setUserZipCode(zipCode));\r\n    dispatch(setUserHeight({ feet: feet, inches: inches }));\r\n    dispatch(setUserPhoneNumber(number));\r\n\r\n    // services\r\n    if (!service) {\r\n      dispatch(setUserServices(\"E-mail\"));\r\n      setService(\"E-mail\");\r\n    } else {\r\n      dispatch(setUserServices(service));\r\n    }\r\n\r\n    // budget\r\n    if (!budget) {\r\n      dispatch(setUserBudget(\"< $50\"));\r\n      setBudget(\"< $50\");\r\n    } else {\r\n      dispatch(setUserBudget(budget));\r\n    }\r\n\r\n    // title\r\n    if (!title) {\r\n      dispatch(setUserTitle(\"None\"));\r\n      setTitle(\"None\");\r\n    } else {\r\n      dispatch(setUserTitle(title));\r\n    }\r\n\r\n    // country\r\n    if (!country) {\r\n      dispatch(setUserCountry(\"Afghanistan\"));\r\n      setCountry(\"Afghanistan\");\r\n    } else {\r\n      dispatch(setUserCountry(country));\r\n    }\r\n    // state\r\n    if (!state) {\r\n      dispatch(setUserStates(\"AL\"));\r\n      setState(\"AL\");\r\n    } else {\r\n      dispatch(setUserStates(state));\r\n    }\r\n\r\n    console.log(\r\n      firstName,\r\n      lastName,\r\n      title,\r\n      email,\r\n      country,\r\n      state,\r\n      address,\r\n      zipCode\r\n    );\r\n  };\r\n  // Form Preview Mode START\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n  const [opacity, setOpacity] = useState(0);\r\n\r\n  function openModal(e) {\r\n    e.preventDefault();\r\n    setOpacity(0);\r\n    setModalOpen(!modalOpen);\r\n  }\r\n\r\n  const afterOpen = () => {\r\n    setTimeout(() => {\r\n      setOpacity(1);\r\n    }, 100);\r\n  };\r\n\r\n  const beforeClose = () => {\r\n    return new Promise((resolve) => {\r\n      setOpacity(0);\r\n      setTimeout(resolve, 200);\r\n    });\r\n  };\r\n\r\n  // Form Preview Mode END\r\n\r\n  return (\r\n    <FormLogic\r\n      dataArray={dataArray}\r\n      titleOptions={titleOptions}\r\n      handleFormSubmit={handleFormSubmit}\r\n      firstName={firstName}\r\n      firstNameError={firstNameError}\r\n      lastNameError={lastNameError}\r\n      emailError={emailError}\r\n      setEmailError={setEmailError}\r\n      setFirstName={setFirstName}\r\n      setTerms={setTerms}\r\n      terms={terms}\r\n      termsError={termsError}\r\n      title={title}\r\n      setTitle={setTitle}\r\n      lastName={lastName}\r\n      setLastName={setLastName}\r\n      email={email}\r\n      setEmail={setEmail}\r\n      beforeClose={beforeClose}\r\n      afterOpen={afterOpen}\r\n      openModal={openModal}\r\n      opacity={opacity}\r\n      modalOpen={modalOpen}\r\n      StyledCloseModal={StyledCloseModal}\r\n      StyledModal={StyledModal}\r\n      SmallCard={SmallCard}\r\n      FormPreview={FormPreview}\r\n      countries={countries}\r\n      country={country}\r\n      setCountry={setCountry}\r\n      states={states}\r\n      state={state}\r\n      setState={setState}\r\n      address={address}\r\n      setAddress={setAddress}\r\n      addressError={addressError}\r\n      city={city}\r\n      setCity={setCity}\r\n      cityError={cityError}\r\n      setCityError={setCityError}\r\n      zipCode={zipCode}\r\n      setZipCode={setZipCode}\r\n      zipCodeError={zipCodeError}\r\n      feetError={feetError}\r\n      inchesError={inchesError}\r\n      setFeet={setFeet}\r\n      setInches={setInches}\r\n      feet={feet}\r\n      inches={inches}\r\n      number={number}\r\n      setNumber={setNumber}\r\n      numberError={numberError}\r\n      services={services}\r\n      service={service}\r\n      setService={setService}\r\n      budgets={budgets}\r\n      budget={budget}\r\n      setBudget={setBudget}\r\n    />\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport {\r\n  Container,\r\n  DisplayFlexMiddle,\r\n  theme,\r\n  Card,\r\n  Span,\r\n  Header,\r\n  H1,\r\n} from \"../styled-components/globalStyled\";\r\nimport { ThemeProvider } from \"styled-components\";\r\nimport { Hero, HeroLogo, HeroCard } from \"../styled-components/styled\";\r\nimport FormData from \"./form/FormData\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nexport default function HeroSection() {\r\n  const { form } = useSelector((state) => ({ ...state }));\r\n\r\n  return (\r\n    <Hero>\r\n      <Container>\r\n        <ThemeProvider theme={theme}>\r\n          <DisplayFlexMiddle evenly>\r\n            <Header>\r\n              <HeroLogo>\r\n                Data<Span>Survey.</Span>\r\n              </HeroLogo>\r\n              <H1>\r\n                Our goal is to create an hassle free, and easy to use data\r\n                survey for our fellow customers .\r\n              </H1>\r\n            </Header>\r\n            <HeroCard>\r\n              <FormData />\r\n            </HeroCard>\r\n          </DisplayFlexMiddle>\r\n        </ThemeProvider>\r\n      </Container>\r\n    </Hero>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Hero from \"../pages/HeroSection\";\r\n\r\nexport default function Home() {\r\n  return (\r\n    <>\r\n      <Hero />\r\n    </>\r\n  );\r\n}\r\n","import { Fragment } from \"react\";\n// need to use hashrouter for ghpages deployment\nimport { HashRouter as Router, Route } from \"react-router-dom\";\nimport { GlobalStyles } from \"./styled-components/globalStyled\";\nimport { ModalProvider } from \"styled-react-modal\";\nimport { FadingBackground } from \"./styled-components/styled\";\nimport Home from \"./pages/Home\";\nfunction App() {\n  return (\n    <ModalProvider backgroundComponent={FadingBackground}>\n      <GlobalStyles />\n      <Router basename={process.env.PUBLIC_URL}>\n        <Route exact path='/' component={Home} />\n      </Router>\n    </ModalProvider>\n  );\n}\n\nexport default App;\n","const INITIAL_STATE = {\r\n  firstName: \"\",\r\n  lastName: \"\",\r\n  title: \"\",\r\n  height: { feet: \"\", inches: \"\" },\r\n  phoneNumber: \"\",\r\n  email: \"\",\r\n  country: \"\",\r\n  states: \"\",\r\n  city: \"\",\r\n  services: \"\",\r\n  budget: \"\",\r\n  address: \"\",\r\n  zipcode: \"\",\r\n};\r\n\r\nconst formReducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case \"SET_USER_FIRST_NAME\":\r\n      return { ...state, firstName: action.firstName };\r\n    case \"SET_USER_LAST_NAME\":\r\n      return { ...state, lastName: action.lastName };\r\n    case \"SET_USER_TITLE\":\r\n      return { ...state, title: action.title };\r\n    case \"SET_USER_HEIGHT\":\r\n      return { ...state, height: action.height };\r\n    case \"SET_USER_PHONE_NUMBER\":\r\n      return { ...state, phoneNumber: action.phoneNumber };\r\n    case \"SET_USER_EMAIL\":\r\n      return { ...state, email: action.email };\r\n    case \"SET_USER_COUNTRY\":\r\n      return { ...state, country: action.country };\r\n    case \"SET_USER_STATES\":\r\n      return { ...state, states: action.states };\r\n    case \"SET_USER_CITY\":\r\n      return { ...state, states: action.city };\r\n    case \"SET_USER_SERVICES\":\r\n      return { ...state, states: action.services };\r\n    case \"SET_USER_BUDGET\":\r\n      return { ...state, states: action.budget };\r\n    case \"SET_USER_ADDRESS\":\r\n      return { ...state, states: action.address };\r\n    case \"SET_USER_ZIPCODE\":\r\n      return { ...state, states: action.zipcode };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default formReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport formReducer from \"./formReducer\";\r\n\r\nexport default combineReducers({\r\n  form: formReducer,\r\n});\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\nimport { HashRouter as Router } from \"react-router-dom\";\n// redux\nimport { createStore, applyMiddleware } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport rootReducer from \"./redux/reducers/rootReducer\";\nimport thunk from \"redux-thunk\";\n\n// redux-persist\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\"; // defaults to localStorage for web\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport autoMergeLevel2 from \"redux-persist/lib/stateReconciler/autoMergeLevel2\";\n\nconst persistConfig = {\n  key: \"root\",\n  storage,\n  stateReconciler: autoMergeLevel2,\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nconst store = composeWithDevTools(applyMiddleware(thunk))(createStore)(\n  persistedReducer\n);\n\nconst persistor = persistStore(store);\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <Router basename={process.env.PUBLIC_URL}>\n        <App />\n      </Router>\n    </PersistGate>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}